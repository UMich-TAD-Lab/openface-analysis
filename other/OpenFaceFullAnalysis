---
title: "Cortisol data analysis with N = 222"
author: "Julianna Calabrese"
date: "Last knitted: `r format(Sys.time(), '%B %d, %Y')`"
output:
  html_document:
    toc: true
    toc_float: true
    toc_depth: 4
    collapse: subsection
    theme: united
    highlight: tango
  pdf_document: default
editor_options:
  chunk_output_type: console
---

```{r library, include=FALSE}
library(car)
library(MASS)
library(tidyverse)
library(psych)
library(stats)
library(summarytools)
library(kableExtra)
library(nlme)
library(lme4)
library(sjPlot)
library(sjstats)
library(multcomp)
library(lattice)
library(rlang)
library(lmerTest) # Gives you p-values for lmer models
```

```{r Load in and lightly clean data, include=FALSE}
mergedata <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/for_full_cort_analysis.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#data <- read.csv(file="/Users/Julianna/Desktop/data/for_full_cort_analysis.csv", header=TRUE, sep=",")
mergedata$X <- NULL
#data$genderold <- NULL
#data$baseline <- as.numeric(data$cort_baseline_Win)
#data$cort_baseline_Win <- NULL
mergedata$ThreatCompc <- mergedata$ThreatComp - mean(mergedata$ThreatComp)
mergedata$DepCompc <- mergedata$DepComp - mean(mergedata$DepComp)
mergedata$ThreatDepInt <- mergedata$ThreatCompc*mergedata$DepCompc
mergedata$id <- as.factor(mergedata$id)
```

## Cheatsheets

* [SAS reference](https://support.sas.com/documentation/cdl/en/statug/63962/HTML/default/viewer.htm#mixed_toc.htm)
* [lme4 cheatsheet](https://stats.stackexchange.com/questions/13166/rs-lmer-cheat-sheet)
* [nlme cheatsheet](https://bartomeuslab.com/tag/nlme/)
* [Mixed model reference](https://www.cscu.cornell.edu/news/Handouts/R_Model_Specification.pdf)
* [Random intercept model](https://www.bristol.ac.uk/media-library/sites/cmm/migrated/documents/random-ints.pdf)

## R packages

While there are many R packages that can conduct mixed modeling, the two most popular choices are the [lme4 package](https://cran.r-project.org/web/packages/lme4/lme4.pdf) with the lmer command and the [nlme package](https://cran.r-project.org/web/packages/nlme/nlme.pdf) with the lme command. Both are suitable alternatives to SAS' PROC MIXED command: [lme4 here](https://cran.r-project.org/web/packages/SASmixed/vignettes/Usinglmer.pdf), [nlme here](http://www.solutionmetrics.com.au/support/splus82win/lmeSAS.pdf). 

The biggest difference between nlme and lme is that nlme allows you to specify a correlation structure (e.g. AR1), while lme4 automatically [defaults to unstructured and is unable to be changed.](https://stats.stackexchange.com/questions/86958/variance-covariance-structure-for-random-effects-in-lme4) However, it's 100x easier to specify non-nested random effects in lme4 than nlme, so if I used nlme, I could only have one random effect or I would have to nest one random effect within the other.

Other packages include [glmmTMB](https://cran.r-project.org/web/packages/glmmTMB/glmmTMB.pdf) and [brms](https://cran.r-project.org/web/packages/brms/brms.pdf). However, glmmTMB seems to offer nothing more than what nlme can offer and brms is used for Bayesian regression modelling, which wasn't used in Lopez-Duran 2014.

## Models

Below are two R models that are as close as possible to the original SAS model. The first model is a random intercept model with an ar1 structure with the `nlme` package. The second model is a random slopes model with a default, unconstrained structure with the `lme4` package. The analyses were done with Melissa's long form dataset. 

### Original SAS model

```
PROC MIXED DATA=longdata COVTEST METHOD=REML;
	WHERE time > -1 and usable = 1; /*starting at sample 0, usable only*/
	CLASS ID ; /*Categorical variables*/
	MODEL Cortwinbox = Cort_baseline_winbox TimeBeforePeak2 TimeAfterPeak2
			 threatcomp_mc threatcomp_mc*Cort_baseline_winbox 
			 threatcomp_mc*TimeBeforePeak2 threatcomp_mc*TimeAfterPeak2
						/SOLUTION DDFM=BW;
	RANDOM intercept TimeBeforePeak2 TimeAfterPeak2/SUB=ID TYPE=ar(1) GCORR; 
	RUN; QUIT;
```

![](C:/Users/jrcala/Documents/My Research/RStudio/melissa_results.png)

### Random intercept model

```{r echo=TRUE, results = 'hide'}
# Random intercept with ar1 structure
mod1 <- lme(Cortwinbox ~
            TimeBeforePeak2 + # Fixed effect
            TimeAfterPeak2 + # Fixed effect
            cort_baseline_winbox + # Fixed effect
            ThreatCompc + # Fixed effect
            ThreatCompc*TimeBeforePeak2 + # Interaction
            ThreatCompc*TimeAfterPeak2 + ThreatCompc*cort_baseline_winbox, # Interaction
            random = ~1|id, # Random intercept for Subject
            corr = corAR1(), # Specifies AR1 structure
            method = "REML", # Specifies REML fit
            na.action = na.exclude, # removes NA values
            data = mergedata)
```

```{r summary mod1, include=FALSE, echo=FALSE}
summary(mod1)
```

```{r Cleaning for tab_model, include=FALSE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")
```

```{r table, echo=FALSE, results = 'asis'}
tab_model(mod1, title = "nlme Model with a Random Intercept and a corAR1 structure",
          dv.labels = "Cortisol", pred.labels = labels, digits = 3, digits.p = 3,
          emph.p = TRUE,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std=NULL,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

$\begin{aligned}
Cortisol = \beta_0  
& + \beta_1 \cdot TimeBeforePeak \\
& + \beta_2 \cdot TimeAfterPeak \\
& + \beta_3 \cdot Baseline \\
& + \beta_4 \cdot ThreatCompc \\
& + \beta_5 \cdot ThreatCompc \cdot TimeBeforePeak \\
& + \beta_6 \cdot ThreatCompc \cdot TimeAfterPeak \\
& + \beta_7 \cdot ThreatCompc \cdot Baseline \\
& + \mu \cdot Subject \\
& + \epsilon \\
\end{aligned}$

### Random slopes model

```{r mod2, echo=TRUE, results = 'hide', warning=FALSE, message=FALSE}
# Random slopes with unconstrained structure
mod2 <- lmer(Cortwinbox ~ 
            TimeBeforePeak2 + # Fixed effect
            TimeAfterPeak2 + # Fixed effect
            cort_baseline_winbox + # Fixed effect
            ThreatCompc + # Fixed effect
            ThreatCompc*TimeBeforePeak2 + # Interaction
            ThreatCompc*TimeAfterPeak2 + # Interaction
            ThreatCompc*cort_baseline_winbox + # Interaction
            (TimeBeforePeak2|id) + (TimeAfterPeak2|id), # Random slopes
            # Default unconstrained cor structure
            data = mergedata)
```

```{r summary mod2, include=FALSE}
options(scipen=99)
summary(mod2)
```

```{r mod2 table, echo=FALSE, results = 'asis'}
tab_model(mod2, title = "lme4 Model with Random Slopes and a UN structure",
          dv.labels = "Cortisol", pred.labels = labels, digits = 3, digits.p = 3,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std = NULL,
          emph.p = TRUE,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

$\begin{aligned}
Cortisol = \beta_0  
& + \beta_1 \cdot TimeBeforePeak \\
& + \beta_2 \cdot TimeAfterPeak \\
& + \beta_3 \cdot Baseline \\
& + \beta_4 \cdot ThreatCompc \\
& + \beta_5 \cdot ThreatCompc \cdot TimeBeforePeak \\
& + \beta_6 \cdot ThreatCompc \cdot TimeAfterPeak \\
& + \beta_7 \cdot ThreatCompc \cdot Baseline \\
& + \mu \cdot TimeBeforePeak_{Subject} \\
& + \mu \cdot TimeAfterPeak_{Subject} \\
& + \epsilon \\
\end{aligned}$


## Conclusions and comparison

I would say that there are no big differences between the R models. Both R models have very similiar estimates and both find that Intercept, TimeAfterPeak, and Baseline are significant. However, the nlme model also finds that ThreatCompc * TimeAfterPeak is significant at p = .044. 

Both R models and the SAS model have fairly similiar estimates, although it seems like the nlme model is a closer estimate to the SAS model. The main difference is that the SAS model has significant p-values for ThreatCompc and ThreatCompc * TimeBeforePeak which are not found in the nlme model.

```{r mod1 and mod2 table, include=FALSE, echo=FALSE, results = 'asis'}
tab_model(mod1, mod2, 
          title = "nlme model vs. lme4 model",
          dv.labels = c("nlme model", "lme4 model"), 
          pred.labels = labels, digits = 3, digits.p = 3,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std = NULL,
          emph.p = TRUE,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

```{r include=FALSE}
readin <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/readin2.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
names(readin)[names(readin) == "Estimates.1"] <- "Estimates"
names(readin)[names(readin) == "Estimates.2"] <- "Estimates"
names(readin)[names(readin) == "Std.Error.1"] <- "Std.Error"
names(readin)[names(readin) == "Std.Error.2"] <- "Std.Error"
names(readin)[names(readin) == "P.value.1"] <- "P.value"
names(readin)[names(readin) == "P.value.2"] <- "P.value"
```

```{r echo=FALSE, results='asis'}
kable(readin, align="l") %>%
  kable_styling("striped", "bordered") %>%
  add_header_above(c(" " = 1, "nlme" = 3, "lme4" = 3, "SAS" = 3)) %>%
  column_spec(2,border_left=T) %>%
  column_spec(5,border_left=T) %>%
  column_spec(8,border_left=T)
```
