---
title: "Another attempt at an explanation"
author: "Julianna Calabrese"
date: "Updated April 24, 2019"
output:
  html_document:
    toc: true
    toc_float: true
    toc_depth: 4
    collapse: subsection
    theme: united
    highlight: tango
  pdf_document: default
editor_options:
  chunk_output_type: console
---

```{r library, include=FALSE}
library(car)
library(MASS)
library(tidyverse)
library(psych)
library(stats)
library(summarytools)
library(kableExtra)
library(nlme)
library(lme4)
library(sjPlot)
library(sjstats)
library(multcomp)
library(lattice)
library(rlang)
library(lmerTest) # Gives you p-values for lmer models
```

```{r Load in and lightly clean data, include=FALSE}
data <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/for_full_cort_analysis.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#data <- read.csv(file="/Users/Julianna/Desktop/data/for_full_cort_analysis.csv", header=TRUE, sep=",")
data$X <- NULL
#data$genderold <- NULL
data$baseline <- as.numeric(data$cort_baseline_Win)
data$cort_baseline_Win <- NULL
data$ThreatCompc <- data$ThreatComp - mean(data$ThreatComp)
data$DepCompc <- data$DepComp - mean(data$DepComp)
data$ThreatDepInt <- data$ThreatCompc*data$DepCompc
```

## Cheatsheets

* [SAS reference](https://support.sas.com/documentation/cdl/en/statug/63962/HTML/default/viewer.htm#mixed_toc.htm)
* [lme4 cheatsheet](https://stats.stackexchange.com/questions/13166/rs-lmer-cheat-sheet)
* [nlme cheatsheet](https://bartomeuslab.com/tag/nlme/)
* [Mixed model reference](https://www.cscu.cornell.edu/news/Handouts/R_Model_Specification.pdf)
* [Random intercept model](https://www.bristol.ac.uk/media-library/sites/cmm/migrated/documents/random-ints.pdf)

## Melissa's syntax for reference

```
PROC MIXED DATA=longdata COVTEST METHOD=REML;
	WHERE time > -1 and usable = 1; /*starting at sample 0, usable only*/
	CLASS ID ; /*Categorical variables*/
	MODEL Cortwinbox = Cort_baseline_winbox TimeBeforePeak2 TimeAfterPeak2
			 threatcomp_mc threatcomp_mc*Cort_baseline_winbox 
			 threatcomp_mc*TimeBeforePeak2 threatcomp_mc*TimeAfterPeak2
						/SOLUTION DDFM=BW;
	RANDOM intercept TimeBeforePeak2 TimeAfterPeak2/SUB=ID TYPE=ar(1) GCORR; 
	RUN; QUIT;
```

## R packages

While there are many R packages that can conduct mixed modeling, the two most popular choices are the [lme4 package](https://cran.r-project.org/web/packages/lme4/lme4.pdf) with the lmer command and the [nlme package](https://cran.r-project.org/web/packages/nlme/nlme.pdf) with the lme command. Both are suitable alternatives to SAS' PROC MIXED command: [lme4 here](https://cran.r-project.org/web/packages/SASmixed/vignettes/Usinglmer.pdf), [nlme here](http://www.solutionmetrics.com.au/support/splus82win/lmeSAS.pdf). 

The biggest difference between nlme and lme is that nlme allows you to specify a correlation structure (e.g. AR1), while lme4 automatically [defaults to unstructured and is unable to be changed.](https://stats.stackexchange.com/questions/86958/variance-covariance-structure-for-random-effects-in-lme4) However, it's 100x easier to specify non-nested random effects in lme4 than nlme, so if I used nlme, I could only have one random effect or I would have to nest one random effect within the other.

Other packages include [glmmTMB](https://cran.r-project.org/web/packages/glmmTMB/glmmTMB.pdf) and [brms](https://cran.r-project.org/web/packages/brms/brms.pdf). However, glmmTMB seems to offer nothing more than what nlme can offer and brms is used for Bayesian regression modelling, which wasn't used in Lopez-Duran 2014.

## Models

On March 27th, I went to CSCAR and had an appointment with Kerby where we discussed how to replicate Melissa's model in R. He told me that the two models below are the closest models I'm going to get to Melissa's model. However, it is not an exact replica of Melissa's model because what Melissa did is not replicable in R. 

In Melissa's analyses, she put the AR1 on the random effects, although she likely should've put it on the error. This can be fixed by putting the random effect on different lines (aka as different statements) in SAS syntax, or by removing TimeBeforePeak and TimeAfterPeak as random effects entirely; you could just have TBP and TAP as fixed effects. The only random effect would be id. 

Additionally, Kerby said that I need to choose between having random slopes or having a AR1 correlation structure. I cannot have both at the same time. `mod1` was made in `nlme` and has the random effect of subject and an autoregressive correlation structure. `mod2` was made in `lme4` and has two random effects: random slopes for TimeBeforePeak and TimeAfterPeak. He also questioned that ThreatCompc was significant as a main effect and as an interaction with the many time variables. He says it makes more sense for ThreatCompc just to be significant as part of an interaction.

Out of curiousity, I also tested another model: made in `lme4` that had random intercepts and slopes for TimeBeforePeak and TimeAfterPeak. However, that model was identical to the model that just had random slopes. So there is no point in adding random intercepts to a `lme4` model. 

```{r, echo=TRUE, results = 'hide'}
# Random intercept with ar1 structure
mod1 <- lme(cortvalue ~
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + # Fixed effect
            ThreatCompc*timebeforepeak + # Interaction
            ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interaction
            random = ~1|id, # Random intercept for Subject
            corr = corAR1(), # Specifies AR1 structure
            method = "REML", # Specifies REML fit
            na.action = na.exclude, # removes NA values
            data = data)
```

```{summary mod1, include=FALSE, echo=FALSE}
summary(mod1)
```

```{r mod2, echo=TRUE, results = 'hide', warning=FALSE, message=FALSE}
# Random slopes with unconstrained structure
mod2 <- lmer(cortvalue ~ 
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + # Fixed effect
            ThreatCompc*timebeforepeak + # Interaction
            ThreatCompc*timeafterpeak + # Interaction
            ThreatCompc*baseline + # Interaction
            (timebeforepeak|id) + (timeafterpeak|id), # Random slopes
            # Default unconstrained cor structure
            data = data)
```

```{r summary mod2, include=FALSE}
options(scipen=99)
summary(mod2)
```

```{r Cleaning for tab_model, include=FALSE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")
```

```{r table, echo=FALSE, results = 'asis'}
tab_model(mod1, title = "nlme Model with a Random Intercept and a corAR1 structure",
          dv.labels = "Cortisol", pred.labels = labels, digits = 3, digits.p = 3,
          emph.p = TRUE,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std=NULL,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

$\begin{aligned}
Cortisol = \beta_0  
& + \beta_1 \cdot TimeBeforePeak \\
& + \beta_2 \cdot TimeAfterPeak \\
& + \beta_3 \cdot Baseline \\
& + \beta_4 \cdot ThreatCompc \\
& + \beta_5 \cdot ThreatCompc \cdot TimeBeforePeak \\
& + \beta_6 \cdot ThreatCompc \cdot TimeAfterPeak \\
& + \beta_7 \cdot ThreatCompc \cdot Baseline \\
& + \mu \cdot Subject \\
& + \epsilon \\
\end{aligned}$

```{r mod2 table, echo=FALSE, results = 'asis'}
tab_model(mod2, title = "lme4 Model with Random Slopes and a UN structure",
          dv.labels = "Cortisol", pred.labels = labels, digits = 3, digits.p = 3,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std = NULL,
          emph.p = TRUE,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

$\begin{aligned}
Cortisol = \beta_0  
& + \beta_1 \cdot TimeBeforePeak \\
& + \beta_2 \cdot TimeAfterPeak \\
& + \beta_3 \cdot Baseline \\
& + \beta_4 \cdot ThreatCompc \\
& + \beta_5 \cdot ThreatCompc \cdot TimeBeforePeak \\
& + \beta_6 \cdot ThreatCompc \cdot TimeAfterPeak \\
& + \beta_7 \cdot ThreatCompc \cdot Baseline \\
& + \mu \cdot TimeBeforePeak_{Subject} \\
& + \mu \cdot TimeAfterPeak_{Subject} \\
& + \epsilon \\
\end{aligned}$

I would say that there are no big differences between the models. The only difference is that the Intercept is not significant in mod2, which makes because mod2 doesn't allow the intercept to vary. I like mod1 better because I think having the ar1 structure is more important than having TimeBeforePeak and TimeAfterPeak as random effects.

```{r mod1 and mod2 table, include=FALSE, echo=FALSE, results = 'asis'}
tab_model(mod1, mod2, 
          title = "nlme model vs. lme4 model",
          dv.labels = c("nlme model", "lme4 model"), 
          pred.labels = labels, digits = 3, digits.p = 3,
          show.ci = FALSE, show.icc=FALSE, show.re.var=FALSE, show.aic=FALSE,
          show.std = NULL,
          emph.p = TRUE,
          show.df = TRUE, string.df="DF", p.val = "wald",
          show.stat = TRUE, string.stat = "T",          
          show.est = TRUE, # No string.est
          show.se = TRUE, string.se="Std Error",
          show.p = TRUE, string.p="P-value",
          show.r2 = TRUE,
          col.order=colorder)
```

## Plots

```{r References, include=FALSE}
#https://quantdev.ssri.psu.edu/tutorials/growth-modeling-chapter-3-linear-growth-models
#http://dpmartin42.github.io/posts/Piecewise-growth

#data$peaktime <- factor(data$peaktime, levels = c("s4time", "s5time", "s6time", "s7time", "s8time", "s9time", "s10time", "s11time", "s12time"))

#data$peaktime <- as.numeric(data$peaktime)

timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)
timeticks2 <- c(-60, -45, -40, -35, -30, -25, -15, -3, 0, 3, 15, 25, 30, 35, 40, 45, 60)
timeticks3 <- c(4, 5, 6, 7, 8, 9, 10, 11, 12)
```

```{r Descriptive barplot, echo=FALSE, warning=FALSE, message=FALSE, include=TRUE}
data2 <- data
data2 <- data2[!is.na(data2$peaktime), ]

data2 %>% 
  count(peaktime) %>% 
  mutate(perc = n / nrow(data2)) -> data2

ggplot(data2, aes(x=peaktime, y=perc, fill="red")) + 
  geom_bar(stat = "identity") + ggtitle("When did most people peak?") +
  theme(legend.position = "none") + 
  xlab("Peak Time") + ylab("") + 
  scale_x_discrete(labels=c("0","3","15","25","30","35","40","45","60"))

rm(data2)
```

```{r Descriptive Density plot, echo=FALSE, warning=FALSE, message=FALSE, include=FALSE}
ggplot(data=data, aes(x=peaktimenum, fill="red")) + 
  geom_density(aes(stat = "identity")) + 
  ggtitle("When did most people peak?") +
  theme(legend.position = "none") + 
  xlab("Peak Time") + ylab("")
```

```{r Plot regression line, echo=FALSE, warning=FALSE, message=FALSE, include=TRUE}
ggplot(data, aes(x = timetopeak, y = cortvalue)) +
  geom_line(aes(group = id), color = "gray") + 
  geom_smooth(aes(y=predict(mod1)), size = 2, color = "red", se = TRUE) + 
  xlab("Time to Peak") + ylab("Cortisol") +
  ggtitle("nlme Regression Line") #+ scale_x_continuous(breaks=timeticks2)
```

```{r Cortisol growth curve, echo=FALSE, warning=FALSE, message=FALSE, include=TRUE}
ggplot(data, aes(timetopeak, cortvalue)) +
  stat_summary(fun.y=mean, geom="point", size=2) +
  stat_summary(fun.data=mean_se, geom="errorbar", linetype="solid", width=0.6) +
  stat_summary(aes(y=predict(mod1)), fun.y=mean, geom="line", lwd=1.5, col="gray") +
  scale_shape_manual(values=c(16, 17)) +
  labs(x="Time to Peak", y="Cortisol") + 
  ggtitle("Cortisol growth curve")
  #+ scale_x_continuous(breaks=timeticks2)
```
