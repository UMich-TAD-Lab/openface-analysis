---
title: "OpenFaceEmotion"
author: "Julianna Calabrese"
date: "Updated 2/19/19"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
#install.packages("mosaic")
#install.packages("ggplot2")
#install.packages("tidyr")
#install.packages("dplyr")
#install.packages("psych")
#install.packages("nlme")
#install.packages("plyr")
#install.packages("Hmisc")
#install.packages("rmarkdown")
#install.packages("shiny")
#install.packages("yaml")
#install.packages("rapportools")
#install.packages("lavaan")
#install.packages("lme4")

library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(shiny)
library(yaml)
library(rapportools)
library(lavaan)
library(lme4)
```

## Outline/Description

This is the file where I'll turn cp_full (generated by OpenFacePrep) into a more condensed dataset. I don't want to use every single AU, because that's a lot of AUs and we can't build a model that involves every AU!

First, you need to do a nice lit review and how other papers coherently smush a lot of individual AUs together. Most likely you'll take an EMFACs-like approach and just calculate emotional intensity based on AU intensit for four emotions: anger, fear, happiness, and sadness. You also want to create one more not-technically-a-emotion: pain.

The generated .csv file should just include six variables: id, anger, fear, happiness, sadness, and pain (although pain isn't technically an emotion). Or maybe it can just add those six variables to cp_full.csv. 

## Load in data

```{r}
cp_full <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_full.csv", header=TRUE, sep=",")
#cp_full <- read.csv(file="/Users/Julianna/Desktop/data/cp_full.csv", header=TRUE, sep=",")
cp_full$X <- NULL
```

```{r}
cp_master <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_master.csv", header=TRUE, sep=",")
#cp_master <- read.csv(file="/Users/Julianna/Desktop/data/cp_master.csv", header=TRUE, sep=",")
cp_master$X <- NULL
```

## Pain

This is a formula from Lucey et al. 2011 (one of Cohn's IEEE papers) that uses AUs to calculate painful expressions. It is called the Prkachin and Solomon pain scale:
Pain = AU4 + (AU6||AU7) + (AU9||AU10) + AU43

However, since we don't have data on AU43, we're just going to go with this formula. This will result in a 15-point scale:
Pain = AU4 + (AU6||AU7) + (AU9||AU10)

Okay, I'm going to make a variable. I'll call it pain2, because it's the second part of the pain equation. It'll be a new variable added to cp_full and will have the value of AU06_r or AU07_r--depending which one is larger. Same thing will happen for AU09_r and AU10_r in pain3. 

```{r}
cp_full$pain2 <- 0
cp_full$pain2 <- ifelse(cp_full$AU06_r > cp_full$AU07_r, cp_full$AU06_r, cp_full$AU07_r)
cp_full$pain3 <- 0
cp_full$pain3 <- ifelse(cp_full$AU09_r > cp_full$AU10_r, cp_full$AU09_r, cp_full$AU10_r)
```

Now make the pain variable.

```{r}
cp_full$pain <- 0
cp_full$pain <- cp_full$AU04_r + cp_full$pain2 + cp_full$pain3
cp_full$pain2 <- NULL
cp_full$pain3 <- NULL
```

Now do it for cp_master.

```{r}
cp_master$pain2 <- 0
cp_master$pain2 <- ifelse(cp_master$AU06_r > cp_master$AU07_r, cp_master$AU06_r, cp_master$AU07_r)
cp_master$pain3 <- 0
cp_master$pain3 <- ifelse(cp_master$AU09_r > cp_master$AU10_r, cp_master$AU09_r, cp_master$AU10_r)
cp_master$pain <- 0
cp_master$pain <- cp_master$AU04_r + cp_master$pain2 + cp_master$pain3
cp_master$pain2 <- NULL
cp_master$pain3 <- NULL
```


## Anger

As described in Kohler et al. 2004 and summarized by Hamm, Kohler, Gur, & Verma 2011, anger is (AU9 + AU16) - AU1.

```{r}
#cp_full$anger_kohler <- 0
#cp_full$anger_kohler <- (cp_full$AU09_r + cp_full$AU16_r) - cp_full$AU01_r
```

According to Ekman, Hager, & Friesen (2002; CD-ROM) in the FACS Manual/Investigator's Guide... 

```{r}
#cp_full$anger1 <- cp_full$AU04_r + cp_full$AU05_r
#cp_full$anger2 <- cp_full$AU04_r + cp_full$AU07_r
#cp_full$anger3 <- cp_full$AU04_r + cp_full$AU05_r + cp_full$AU07_r
#cp_full$anger4 <- cp_full$AU17_r + cp_full$AU24_r
#cp_full$anger5 <- cp_full$AU23_r
```

According to Affectiva (https://imotions.com/blog/facial-action-coding-system/)...

```{r}
#cp_full$anger_aff <- cp_full$AU04_r + cp_full$AU05_r + cp_full$AU07_r + cp_full$AU23_r
```

```{r}
cp_full$anger <- cp_full$AU04_r + cp_full$AU05_r + cp_full$AU07_r + cp_full$AU23_r
```

```{r}
cp_master$anger <- cp_master$AU04_r + cp_master$AU05_r + cp_master$AU07_r + cp_master$AU23_r
```


## Fear

As described in Kohler et al. 2004 and summarized by Hamm, Kohler, Gur, & Verma 2011, fear is AU2 - AU7 - AU10. 

According to Ekman, Hager, & Friesen (2002; CD-ROM) in the FACS Manual/Investigator's Guide...

```{r}
#cp_full$fear1 <- cp_full$AU01_r + cp_full$AU02_r + cp_full$AU04_r
#cp_full$fear2 <- cp_full$AU20_r
```

According to Affectiva (https://imotions.com/blog/facial-action-coding-system/)...

```{r}
#cp_full$fear_aff <- cp_full$AU01_r + cp_full$AU02_r + cp_full$AU04_r + cp_full$AU05_r + cp_full$AU07_r + cp_full$AU20_r cp_full$AU26_r 
```

```{r}
cp_full$fear <- cp_full$AU01_r + cp_full$AU02_r + cp_full$AU04_r + cp_full$AU05_r + cp_full$AU07_r + cp_full$AU20_r + cp_full$AU26_r
```

```{r}
cp_master$fear <- cp_master$AU01_r + cp_master$AU02_r + cp_master$AU04_r + cp_master$AU05_r + cp_master$AU07_r + cp_master$AU20_r + cp_master$AU26_r
```


## Happiness

As described in Kohler et al. 2004 and summarized by Hamm, Kohler, Gur, & Verma 2011, happiness is (AU6 + AU12) - AU4 - AU20.

According to Ekman, Hager, & Friesen (2002; CD-ROM) in the FACS Manual/Investigator's Guide...

```{r}
#cp_full$happiness1 <- cp_full$AU12_r
#cp_full$happiness2 <- cp_full$AU06_r + cp_full$AU12_r
#cp_full$happiness3 <- cp_full$AU07_r + cp_full$AU12_r
```

According to Affectiva (https://imotions.com/blog/facial-action-coding-system/)...

```{r}
#cp_full$happiness_aff <- cp_full$AU06_r + cp_full$AU12_r
```

```{r}
cp_full$happiness <- cp_full$AU06_r + cp_full$AU12_r
```

```{r}
cp_master$happiness <- cp_master$AU06_r + cp_master$AU12_r
```

## Sadness

As described in Kohler et al. 2004 and summarized by Hamm, Kohler, Gur, & Verma 2011, sadness is AU17 - AU25. 

According to Ekman, Hager, & Friesen (2002; CD-ROM) in the FACS Manual/Investigator's Guide...

```{r}
#cp_full$sadness1 <- cp_full$AU01_r
#cp_full$sadness2 <- cp_full$AU01_r + cp_full$AU04_r
#cp_full$sadness3 <- cp_full$AU15_r
#cp_full$sadness4 <- cp_full$AU06_r + cp_full$AU15_r
#cp_full$sadness5 <- cp_full$AU11_r + cp_full$AU17_r
#cp_full$sadness6 <- cp_full$AU11_r + cp_full$AU17_r
#cp_full$sadness7 <- cp_full$AU11_r + cp_full$AU15_r
```

According to Affectiva (https://imotions.com/blog/facial-action-coding-system/)...

```{r}
#cp_full$sadness_aff <- cp_full$AU01_r + cp_full$AU04_r + cp_full$AU15_r
```

```{r}
cp_full$sadness <- cp_full$AU01_r + cp_full$AU04_r + cp_full$AU15_r
```

```{r}
cp_master$sadness <- cp_master$AU01_r + cp_master$AU04_r + cp_master$AU15_r
```

## CURRENT ISSUE

Ideally I'd like to use EMFACS' proper AU combinations, but I have no idea how to take all these combinations and use them like Lupis, Lerman, and Wolf (2014) describe in their methods. Lupis et al. says that they utilize different combinations but don't exactly explain how they translate these different pieces into a coherent "anger". So for the time being I'm using Affectiva's equations with the hope that I can figure out how to properly utilize the EMFACS combinations. 

Also here is the link/citation for EMFACS that I used: https://www.worldcat.org/title/facial-action-coding-system-the-manual-on-cd-rom-html-demonstration-version/oclc/176910557

## Write it out back as "cp_full"

```{r}
write.csv(cp_full, file="C:/Users/jrcala/Documents/My Research/RStudio/cp_full.csv")
```

```{r}
write.csv(cp_master, file="C:/Users/jrcala/Documents/My Research/RStudio/cp_master.csv")
```
