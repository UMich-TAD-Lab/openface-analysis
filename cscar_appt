---
title: "CSCAR Appointment"
author: "Julianna Calabrese"
date: "February 6, 2019"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(yaml)
library(rapportools)
library(lavaan)
library(lme4)
library(corrr)
library(corrplot)
library(reshape2)
library(lmerTest)
library(multcomp)
library(optimx)
library(MuMIn)
library(Rmisc)
library(jsonlite)
library(knitr)
library(taRifx)
library(papeR)
library(stargazer)
library(kableExtra)
library(broom)
library(xtable)
library(sjPlot)
library(sjstats)
library(sjlabelled)
library(sjmisc)
library(ggeffects)
library(glmmTMB)
library(bindrcpp)
library(pbkrtest)
library(devtools)
library(psycholing)
library(pander)
library(coefplot)
library(ggiraphExtra)
library(languageR)
library(brms)
```

```{r Load in data, include=FALSE}
cp_long <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_long.csv", header=TRUE, sep=",")
#cp_long <- read.csv(file="/Users/Julianna/Desktop/data/cp_long.csv", header=TRUE, sep=",")
cp_long$X <- NULL

cp_long$gender <- as.integer(cp_long$gender)
cp_long$gendercat <- as.character(cp_long$gendercat)
cp_long$male <- as.integer(cp_long$male)
cp_long$female <- as.integer(cp_long$female)
cp_long$genderold <- NULL
cp_long$baseline <- as.numeric(cp_long$cort_baseline_Win)
cp_long$baselineC <- as.numeric(cp_long$cort_baseline_WinC)
cp_long$cort_baseline_Win <- NULL
cp_long$cort_baseline_WinC <- NULL
cp_long$id <- as.factor(cp_long$id)
```

Remember that baseline always needs to be a predictor!

## lmer() in the lme4 package

```{r}
base.lmer <- lmer(cortvalue ~ timebeforepeak + timeafterpeak + baseline + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)

base.lmer <- lmer(cortvalue ~ baseline + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)

summary(base.lmer)
```

lmer() allows me to have multiple non-nested random effects (e.g. timebeforepeak, timeafterpeak) but I can't specify a correlation structure.

## lme in the nlme package

```{r}
base.lme <- lme(cortvalue ~ timebeforepeak + timeafterpeak + baseline, 
        random = ~ 1 | id, 
        correlation = corAR1(),
        data=cp_long)
summary(base.lme)
```

I need to be able to put multiple non-nested random effects in this above model: timebeforepeak and timeafterpeak. 

List of random effects:
* timebeforepeak
* timeafterpeak
* id

## failed nlme model

```{r}
base.lme2 <- lme(cortvalue ~ baseline + timebeforepeak + timeafterpeak, 
          random=~1|id, timebeforepeak, timeafterpeak, 
          correlation=corAR1(),
          data = cp_long)
summary(base.lme2)
```

## new

```{r}
mod1 <- lmer(cortvalue ~ baseline + 1|id + timebeforepeak|id + timeafterpeak|id, data = cp_long)
```

1|id --> the intercept which is allowed to vary for each id

Use glmmTMB! 

use need a third time variable --> use stime as a random effect

when you use corAR1, ypou specifu corAR1 with respect to stime

use lme4 as a starting point, then start doing things in glmmTMB by specifying corAR1

```{r}
mod1 <- glmmTMB(cortvalue ~ baseline + 1|id + timebeforepeak|id + timeafterpeak|id + ar1(stime|id), data=cp_long)

mod1 <- glmmTMB(cortvalue ~ baseline + 1|id , data=cp_long)

mod2 <- lme4::lmer(cortvalue ~ baseline + timebeforepeak + timeafterpeak + 1|id + timebeforepeak|id + timeafterpeak|id, data=cp_long)

mod2 <- glmmTMB(cortvalue ~ baseline + timebeforepeak + timeafterpeak + 1|id + timebeforepeak|id + timeafterpeak|id, data=cp_long)

mod2 <- lme4::lmer(cortvalue ~ baseline + timebeforepeak + timeafterpeak + 1|id, data=cp_long)

mod2 <- lme4::lmer(cortvalue ~ peaktimenum + baseline + timebeforepeak + timeafterpeak + 1|id, data=cp_long)

mod3 <- lme4::lmer(cortvalue ~ peaktimenum + baseline + timebeforepeak + timeafterpeak + 1|id, data=cp_long)
```

```{r}
class(cp_long$baseline)
class(cp_long$timeafterpeak)
class(cp_long$baseline)
```

```{r}
mod5 <- lmer(cortvalue ~ 0 + timebeforepeak + timeafterpeak + timebeforepeak|id + timeafterpeak|id, data = cp_long) #no 1|id #no baseline?
```

```{r}
mod5 <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + (timebeforepeak|id) + (1|id), data = cp_long)
summary(mod5)
```

```{r}
mod6 <- lmer(cortvalue ~ 0 + timebeforepeak + timeafterpeak + (1|id), data = cp_long)
summary(mod6)
```

```{r}
goodmod <- lmer(cort2 ~ 0 + timebeforepeak + timeafterpeak + baseline + (timebeforepeak|id) + (timeafterpeak|id) + (1|id), data = cp_long)

goodmod <- lmer(cort2 ~ 0 + timebeforepeak + timeafterpeak + baseline + (1|id), data = cp_long)
summary(goodmod)

goodmod <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + anger + (1|id), data = cp_long)
summary(goodmod)

glmmmod <- glmmTMB(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + ar1(stime|id), data=cp_long)
```

## cort2?

```{r}
cort2 <- cortvalue - cortvaluethattheypeakedat #how far are they from that peak
#this should be the thing that u predict
```

```{r}
#cp_long$cort2 <- cp_long$cortvalue - (cp_long$cortvalue == cp_long$)
```

openfacereformat has been double checked and fixed, try out this code now!!!!

## Feb 11 2019

```{r}
mod1 <- lmer(cortvalue ~ 0 + timebeforepeak + timeafterpeak + (1|id), data=cp_long)
summary(mod1)

mod2 <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + (1|id), data=cp_long)
summary(mod2)
```

I think the 0 allows the intercept to vary by person, which is what we want because everyone has a different peak cortisol value.

For anything with a |, put it in parentheses! 

tilda thing: (formula for random terms | unit for which these terms apply)

```{r}
mod3 <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + (1|id) + (timebeforepeak|id) + (timeafterpeak|id), data=cp_long)
summary(mod3)

#(1|id) allows everyone to have a random intercept
```

```{r}
mod4 <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data=cp_long)
summary(mod4)
#I like this model
```

Please note that thed default covariance structure for lmer is unstructured. According to Corey Powell, specifying a covariance structure of AR1 isn't needed when we have for timebefore/afterpeak as random AND fixed effects. 

You gotta do the corAR1 thing...

```{r}
mod5 <- glmmTMB(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + ar1(1|timebeforepeak) + ar1(1|timeafterpeak), data=cp_long)
summary(mod5)
```

```{r}
mod6 <- glmmTMB(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + ar1(stime + 0|id), data=cp_long)
summary(mod6)
```

```{r}
mod7 <- glmmTMB(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + ar1(stime|id), data=cp_long)
summary(mod7)
```

```{r}
mod8 <- glmmTMB(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + ar1(1|stime), data=cp_long)
summary(mod8)
```

## going back to lmer, kind of starting from mod4

```{r}
mod9 <- lmer(cortvalue ~ 1 + timebeforepeak + timeafterpeak + baseline + (1|id) + (0 + timebeforepeak|id) + (0 + timeafterpeak|id), data=cp_long)
summary(mod9)

anova(mod4, mod9)
anova(mod9, mod4)
```

## starting over!

https://stats.stackexchange.com/questions/13166/rs-lmer-cheat-sheet

```{r}
mod1 <- lmer(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id (i.e., for each level of id, that level's
                      # intercept's deviation from the global intercept)
             + (1|timebeforepeak) # Random effect intercepts for timebeforepeak
             + (1|timeafterpeak), # Random effect intercepts for timeafterpeak
             data=cp_long, REML=TRUE)
summary(mod1)
# No warnings
```

```{r}
mod1.5 <- lmer(cortvalue ~ 
               0 # Fixed? intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id (i.e., for each level of id, that level's
                      # intercept's deviation from the global intercept)
             + (1|timebeforepeak) # Random effect intercepts for timebeforepeak
             + (1|timeafterpeak), # Random effect intercepts for timeafterpeak
             data=cp_long, REML=TRUE)
summary(mod1.5)
# No warnings
```

```{r}
mod2 <- lmer(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id
             + (0 + timebeforepeak|id) # The effect of timebeforepeak within each level of id
             + (0 + timeafterpeak|id), # The effect of timeafterpeak within each level of id
             data=cp_long, REML=TRUE)
summary(mod2)
# No warnings
```

```{r}
mod2.5 <- lmer(cortvalue ~ 
               0 # Fixed? intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id
             + (0 + timebeforepeak|id) # The effect of timebeforepeak within each level of id
             + (0 + timeafterpeak|id), # The effect of timeafterpeak within each level of id
             data=cp_long, REML=TRUE)
summary(mod2.5)
# No warnings
```

## trying out glmmtmb again!

```{r}
mod3 <- glmmTMB(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id (i.e., for each level of id, that level's
                      # intercept's deviation from the global intercept)
             + ar1(1|timebeforepeak) # Random effect intercepts for timebeforepeak
             + ar1(1|timeafterpeak), # Random effect intercepts for timeafterpeak
             data=cp_long, REML=TRUE)
summary(mod3)
# Warning
```

```{r}
mod3.1 <- glmmTMB(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + ar1(1|id) # Random effect intercepts for id (i.e., for each level of id, that level's
                      # intercept's deviation from the global intercept)
             + (1|timebeforepeak) # Random effect intercepts for timebeforepeak
             + (1|timeafterpeak), # Random effect intercepts for timeafterpeak
             data=cp_long, REML=TRUE)
summary(mod3)
# Warning
```

```{r}
mod3.2 <- glmmTMB(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id
             + ar1(0 + timebeforepeak|id) # The effect of timebeforepeak within each level of id
             + ar1(0 + timeafterpeak|id), # The effect of timeafterpeak within each level of id
             data=cp_long, REML=TRUE)
summary(mod3.2)
# Warning
```

```{r}
mod3.3 <- glmmTMB(cortvalue ~ 
               1 # Random intercept for each person
             + timebeforepeak # Fixed effect
             + timeafterpeak # Fixed effect
             + baseline # Fixed effect
             + (1|id) # Random effect intercepts for id
             + (0 + timebeforepeak|id) # The effect of timebeforepeak within each level of id
             + (0 + timeafterpeak|id) # The effect of timeafterpeak within each level of id
             + ar1(0 + stime|id), # ???
             data=cp_long, REML=TRUE)
summary(mod3.3)
# Warning
```

Conclusion: There is no need to specify a covariance structure of ar1. lmer does just fine. 
