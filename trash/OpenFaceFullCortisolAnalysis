---
title: "OpenFace: Full Cortisol Analysis and Explanation"
author: "Julianna Calabrese"
date: "Last knitted: `r format(Sys.time(), '%B %d, %Y')`"
output:
  html_document:
    toc: true
    toc_float: true
    toc_depth: 4
    collapse: subsection
    theme: united
    highlight: tango
  pdf_document: default
editor_options:
  chunk_output_type: console
---

```{r setup, include=FALSE}
library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(yaml)
library(rapportools)
library(lavaan)
library(lme4)
library(corrr)
library(corrplot)
library(reshape2)
library(lmerTest)
library(multcomp)
library(optimx)
library(MuMIn)
library(Rmisc)
library(jsonlite)
library(knitr)
library(taRifx)
library(papeR)
library(stargazer)
library(kableExtra)
library(broom)
library(xtable)
library(sjPlot)
library(sjstats)
library(sjlabelled)
library(sjmisc)
library(ggeffects)
library(glmmTMB)
library(bindrcpp)
library(pbkrtest)
library(devtools)
library(psycholing)
library(pander)
library(coefplot)
library(ggiraphExtra)
library(languageR)
library(aod)
```

Before running this file, you should have already ran OpenFaceFullCortisolPrep!

```{r include=FALSE}
## Load in and clean up the data
#data <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/for_full_cort_analysis.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
data <- read.csv(file="/Users/Julianna/Desktop/data/for_full_cort_analysis.csv", header=TRUE, sep=",")
data$X <- NULL
data$genderold <- NULL
data$baseline <- as.numeric(data$cort_baseline_Win_thing)
#data$baselineC <- as.numeric(data$cort_baseline_WinC)
data$cort_baseline_Win <- NULL
#data$cort_baseline_WinC <- NULL
data$id <- as.factor(data$id)
data$timebeforepeak <- as.integer(data$timebeforepeak)
data$timeafterpeak <- as.integer(data$timeafterpeak)
ctrl <- lmeControl(opt='optim')
colorder <- c("est", "se", "p")
#data4 <- data
#data4[is.na(data4)] <- 0
#data4$ThreatCompc <- data4$ThreatComp - mean(data4$ThreatComp)
#data4$DepCompc <- data4$DepComp - mean(data4$DepComp)
#data4$ThreatDepInt <- data4$ThreatCompc*data4$DepCompc
#data <- data4
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
#which(is.na(data$id))
data$Dummy <- factor(1)
groupeddata0 <- groupedData(cortvalue ~ 1 | Dummy, data)
groupeddata <- groupedData(cortvalue ~ 1 | id, data=data)
groupeddata2 <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
data(Oxide)
```

## Introduction

This is a document I put together while writing [OpenFaceAnalysis](https://github.com/UMich-TAD-Lab/openface-analysis/blob/master/OpenFaceAnalysis) in order to keep track of all possible options. I want to say that I didn't make the below choices in any particular order. They were decided almost simultaneously as I was going through the different models. Note that significant models are highlighted in yellow. 

## 1. Which R package to choose? 

While there are many R packages that can conduct mixed modeling, the two most popular choices are the [lme4 package](https://cran.r-project.org/web/packages/lme4/lme4.pdf) with the lmer command and the [nlme package](https://cran.r-project.org/web/packages/nlme/nlme.pdf) with the lme command. Both are suitable alternatives to SAS' PROC MIXED command: [lme4 here](https://cran.r-project.org/web/packages/SASmixed/vignettes/Usinglmer.pdf), [nlme here](http://www.solutionmetrics.com.au/support/splus82win/lmeSAS.pdf). Ultimately, I decided to go with the nlme package. The main reason I went with nlme is because nlme allows me to specify a correlation structure (e.g. CAR1, AR1), while lme4 automatically [defaults to unstructured and is unable to be changed.](https://stats.stackexchange.com/questions/86958/variance-covariance-structure-for-random-effects-in-lme4) It is important to note that both packages allow me to have multiple crossed random effects, something I originally thought was impossible with nlme.

Other packages include [glmmTMB](https://cran.r-project.org/web/packages/glmmTMB/glmmTMB.pdf) and [brms](https://cran.r-project.org/web/packages/brms/brms.pdf). However, glmmTMB seems to offer nothing more than what nlme can offer and brms is used for Bayesian regression modelling, which wasn't used in Lopez-Duran 2014.

## 2. Random intercepts, random slopes, or both?

Please note that for the random intercept model, the only random effect is ID, since in the `nlme` package, I can only let the intercept vary by one random effect. Another package, `lme4`, does allow me to do that, but `lme4` does come with the previously mentioned drawbacks. 

```{r Base models, results='hide', echo=TRUE , error=TRUE, include=FALSE}
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline, # Fixed effect
            random = ~ 1 | id,  # Random intercepts (not slopes)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline, # Fixed effect
            random = ~ 0 + timebeforepeak + timeafterpeak | id,  # Random slopes (not intercepts)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod3 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline, # Fixed effect
            random = ~ 1 + timebeforepeak + timeafterpeak | id,  # Random intercepts and slopes
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, error=TRUE, include=FALSE}
colorder <- c("est", "se", "p")

tab_model(mod1, title = "Random Intercepts", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder)

tab_model(mod2, title = "Random Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder)

tab_model(mod3, title = "Random Intercepts and Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder)
```

So which model should I go with? Since I know for a fact that at least one of the threat variables from Tyler's ThreatDep dataset (e.g. ThreatCompc) is a significant predict of cortisol reactivity, then I should go with the model that mimics that. While this isn't the most scientific method, this should point me in the right direction when translating from SAS to R. 

```{r include=FALSE, echo=FALSE, error=TRUE}
rm(mod1)
rm(mod2)
rm(mod3)
```

```{r Threat models, results='hide', echo=TRUE , error=TRUE, include=FALSE}
ctrl <- lmeControl(opt='optim')

mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 | id,  # Random intercepts (not slopes)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 0 + timebeforepeak + timeafterpeak | id,  # Random slopes (not intercepts)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod3 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 + timebeforepeak + timeafterpeak | id,  # Random intercepts and slopes
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

tab_model(mod1, title = "Threat Random Intercepts", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #fff8d3;'))

tab_model(mod2, title = "Threat Random Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))

tab_model(mod3, title = "Threat Random Intercepts and Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder)
```

```{r include=FALSE, echo=FALSE, error=TRUE}
rm(mod1)
rm(mod2)
rm(mod3)
```

## 3: Optimization?

### Optimized

```{r 1 + Optimized, , error=TRUE, results='hide', echo=TRUE , error=TRUE, include=FALSE}
ctrl <- lmeControl(opt='optim')

mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 | id,  # Random intercepts (not slopes)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 0 + timebeforepeak + timeafterpeak | id,  # Random slopes (not intercepts)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod3 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 + timebeforepeak + timeafterpeak | id,  # Random intercepts and slopes
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

tab_model(mod1, title = "Optimized + 1 Random Intercepts", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #fff8d3;'))

tab_model(mod2, title = "Optimized + 1 Random Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))

tab_model(mod3, title = "Optimized + 1 Random Intercepts and Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder)

rm(mod1)
rm(mod2)
rm(mod3)
```

### Not Optimized

```{r 1 + Not optimized, , error=TRUE, results='hide', echo=TRUE , error=TRUE, include=FALSE}
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 | id,  # Random intercepts (not slopes)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 0 +  timebeforepeak + timeafterpeak | id,  # Random slopes (not intercepts)
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

tab_model(mod1, title = "Not Optimized + 1 Random Intercepts", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF", show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #fff8d3;'))

tab_model(mod2, title = "Not Optimized + 1 Random Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))

rm(mod1)
rm(mod2)
```

## 5. Use lme4?

The main reason I might want to use `lme4` is that for the random intercepts model, I think I can let the intercept vary using TimeBeforePeak and TimeAfterPeak. With `nlme`'s random intercept model, I can only specify one variable, which I chose to be id.

https://www.cscu.cornell.edu/news/Handouts/R_Model_Specification.pdf

```{r results='hide', echo=TRUE, error=TRUE, include=FALSE}
# lmer intercepts
lmer1 <- lmer(cortvalue ~ 
              #The 1 allows us to have a random/varying intercept for each subject
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline + # Interactions
            (1|timebeforepeak) + (1|timeafterpeak),
            data = data)

# lmer Slopes
lmer2 <- lmer(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline + # Interactions
            (timebeforepeak|id) + (timeafterpeak|id),
            data = data)

# lmer Intercepts and Slopes
lmer3 <- lmer(cortvalue ~ 
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline + # Interactions
            (1 + timebeforepeak|id) + (1 + timeafterpeak|id),
            data = data)
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

tab_model(lmer1, title = "lmer Random Intercepts", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))

tab_model(lmer2, title = "lmer Random Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.r2=TRUE, col.order=colorder)

tab_model(lmer3, title = "lmer Random Intercepts and Slopes", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.r2=TRUE, col.order=colorder)

rm(lmer1)
rm(lmer2)
rm(lmer3)
```

## Conclusion

1. Which package should I use?
    * nlme is the choice for now so I can specify a `AR1` structure.
2. Random intercepts, slopes, or both?
    * As far as I can see, the data doesn't like it when intercepts _and_ slopes are allowed to randomly vary. For some of the weird combinations I tried out, the results for a Random Intercept model and a Random Intercept and Slope model are very similiar, [which I think means that there is not that much of a random intercept for that specific model.](https://stat.ethz.ch/pipermail/r-help/2012-June/315439.html)
3. Optimization?
    * Yes, the only time it really affects things is when a model is unable to converge, then optimization repairs that.
4. AR1 or CAR1?
    * I should use AR1. 
5. Use lme4?
    * Not for now, at least. `nlme` is doing fine. However, the `lme4`'s random intercept model is promising and I might come back to that.

It looks like the best model for me:

* uses nlme
* has random slopes
* is optimized
* uses an AR1 structure

## HERE WE GO

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

bestmod <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~ 1 + timebeforepeak + timeafterpeak | id,  # Random slopes and intercepts
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
#summary(bestmod)

tab_model(bestmod, title = "The Real Best Model", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

## Trying things until something works

```{r nested, echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#same as mod4
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(timebeforepeak=~1|id, timeafterpeak=~1|id),
            #corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
summary(mod1)

tab_model(mod1, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r, echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#same as mod4
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(~0+timebeforepeak|id, ~0+timeafterpeak|id, ~1|id),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
summary(mod1)

tab_model(mod1, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r, echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#same as mod4
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~1|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
summary(mod1)

tab_model(mod1, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

What if ID 10001 cortvalue samples 5 and 6 were taken at exactly the same time?

```{r}
newdata <- data

newdata <- data %>%
  group_by(data, id)

newdata <- summarize(
  group_by(data, id),
  u = length(unique(timebeforepeak))
  - length(timebeforepeak))


data$id
data$timebeforepeak
```

```{r i think this is good, good good, echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#same as mod4
mod1 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = ~1|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
summary(mod1)

tab_model(mod1, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = list(timebeforepeak=~1, timeafterpeak=~1),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
#summary(mod2)

tab_model(mod2, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#BAD BAD BAD
mod3 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = list(~timebeforepeak|id, ~timeafterpeak|id),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)
#summary(mod3)

tab_model(mod3, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#same as mod1
mod4 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = list(~1|timebeforepeak, ~1|timeafterpeak),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)
#summary(mod4)

tab_model(mod4, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#BAD BAD BAD
mod5 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = list(1|id, 0+timebeforepeak+timeafterpeak|id),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)
#summary(mod5)

tab_model(mod5, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#BAD BAD BAD
mod6 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = ~1|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)
#summary(mod6)

tab_model(mod6, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

## back to lmer

```{r}
mod7 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (1|id),
            data = data)
summary(mod7)

tab_model(mod7, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r}
mod8 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (timebeforepeak + timeafterpeak|id),
            data = data)
summary(mod8)
tab_model(mod8, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r nice??}
mod9 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (timebeforepeak|id) + (timeafterpeak|id),
            data = data)
summary(mod9)
tab_model(mod9, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r}
mod10 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (0+timebeforepeak|id) + (0+timeafterpeak|id),
            data = data)
summary(mod10)
tab_model(mod10, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r}
mod11 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (1|id) + (0+timeafterpeak+timeafterpeak|id),
            data = data) #control = ctrl)
summary(mod11)
tab_model(mod11, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r}
mod12 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + 
               ThreatCompc*timebeforepeak + 
               ThreatCompc*timeafterpeak + 
               ThreatCompc*baseline +
            (1|id) + (0+timeafterpeak|id) + (0+timeafterpeak|id),
            data = data)
summary(mod12)
tab_model(mod12, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

## back to nlme

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#Random group intercept
mod13 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = ~1|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)
summary(mod13)

tab_model(mod13, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#Random slope of x within group with correlated intercept

mod14 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = ~(timebeforepeak+timeafterpeak)|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)


tab_model(mod14, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")
#Intercept varying among sites and among blocks within sites
#(nested random effects)

mod15 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = ~1/(timebeforepeak+timeafterpeak)|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)


tab_model(mod15, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

mod16 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = ~(timebeforepeak+timeafterpeak)|id,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
           #Do I need to add weights???
            data = data)


tab_model(mod16, title = "Will it work? Who knows!", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

## Trying again :(

```{r error=TRUE}
data5 <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak + baseline | id, data=data, outer= ~ timebeforepeak + timeafterpeak + baseline)
```

```{r error=TRUE}
mod1 <- lme(cortvalue ~               timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
             ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline, data=data5, random = ~ 1|id, na.action="na.omit")
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + ThreatCompc*timebeforepeak + 
              ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            random = list(id = ~timebeforepeak, id=~timeafterpeak),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

tab_model(mod2, title = "aaaaaaah", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r echo=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
              ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random = list(timebeforepeak = ~ 1, timeafterpeak = ~ 1),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

tab_model(mod2, title = "aaaaaaah", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r error=TRUE}
mod4 <- lmer(cortvalue ~ 
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline + # Interactions
            (1 + timebeforepeak|id) + (1 + timeafterpeak|id),
            data = data)
summary(mod4)
```

## Multiple random effects with nlme

```{r error=TRUE}
colorder <- c("est", "se", "p")
#no no no
mod2 <- lme(cortvalue ~
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
              ThreatCompc + 
              ThreatCompc*timebeforepeak + 
              ThreatCompc*timeafterpeak + 
              ThreatCompc*baseline,
            random=list(id=pdBlocked(list(pdIdent(~timebeforepeak-1), pdIdent(~timeafterpeak-1)))),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)

tab_model(mod2, title = "aaaaaaah", dv.labels = "Cortisol", digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

```{r}
lmer1.1 <- lmer(cortvalue ~ 
              timebeforepeak + # Fixed effect
              timeafterpeak + # Fixed effect
              baseline + # Fixed effect
             ThreatCompc + ThreatCompc*timebeforepeak + ThreatCompc*timeafterpeak + ThreatCompc*baseline + # Interactions
            (1|timebeforepeak:timeafterpeak),
            data = data)
```

## March 22 2019

#### Model 1

```{r results='hide', echo=TRUE, error=TRUE, include=FALSE}
mod1 <- lme(cortvalue ~
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(timebeforepeak=~1|id, timeafterpeak=~1|id),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, message=FALSE, warning=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")

tab_model(mod1, title = "Model 1", dv.labels = "Cortisol", pred.labels = labels, digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

#### Model 2

```{r results='hide', echo=TRUE, error=TRUE, include=FALSE}
mod2 <- lme(cortvalue ~
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(timebeforepeak=~1, timeafterpeak=~1),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, message=FALSE, warning=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")

tab_model(mod2, title = "Model 2", dv.labels = "Cortisol", pred.labels = labels, digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

#### Model 3

```{r results='hide', echo=TRUE, error=TRUE, include=FALSE}
mod3 <- lme(cortvalue ~
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(timebeforepeak = ~id, timeafterpeak = ~id),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, message=FALSE, warning=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")

tab_model(mod3, title = "Model 3", dv.labels = "Cortisol", pred.labels = labels, digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

#### Model 4

```{r results='hide', echo=TRUE, error=TRUE, include=FALSE}
mod4 <- lme(cortvalue ~
            timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline, # Interactions
            random = list(id = ~timebeforepeak, id = ~timeafterpeak),
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action = na.exclude, # removes NA values
            data = data)
```

```{r echo=FALSE, message=FALSE, warning=FALSE, error=TRUE}
colorder <- c("est", "se", "p")

labels <- c("Intercept", "TimeBeforePeak", "TimeAfterPeak", "Baseline", "ThreatCompc", "ThreatCompc * TimeBeforePeak", "ThreatCompc * TimeAfterPeak", "ThreatCompc * Baseline")

tab_model(mod4, title = "Model 4", dv.labels = "Cortisol", pred.labels = labels, digits = 5, digits.p = 5,  show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Std Error", show.df = TRUE, string.df="DF",  show.r2=TRUE, col.order=colorder) #CSS = list(css.table = 'background-color: #f4ebb7;'))
```

#### delete

```{r}
Oxide$Dummy <- factor(1)
Oxide <- groupedData(Thickness ~ 1 | Dummy, Oxide)
lme(Thickness ~ 1, data=Oxide,
    random=pdBlocked(list(pdIdent(~ 0 + Lot),
                          pdIdent(~ 0 + Wafer))))
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | Dummy, data)
delete1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1,
    na.action = na.exclude,
    random=pdBlocked(list(pdIdent(~ 0 + timebeforepeak),
                          pdIdent(~ 0 + timeafterpeak))))
```

```{r}
tab_model(delete1)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete1.1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1,
    na.action = na.exclude,
    random=pdBlocked(list(pdIdent(~ 0 + timebeforepeak),
                          pdIdent(~ 0 + timeafterpeak))))
tab_model(delete1.1)
```

### https://stackoverflow.com/questions/36643713/how-to-specify-different-random-effects-in-nlme-vs-lme4

```{r}
data$dummy <- factor(1)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
          random=list(dummy =
                pdBlocked(list(pdIdent(~id),
                               pdIdent(~timebeforepeak),
                               pdIdent(~timeafterpeak)))),
          data=data,
          na.action=na.exclude)
```

```{r}
data$dummy <- factor(1)
delete3 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
          random=list(id =
                pdBlocked(list(pdIdent(~timebeforepeak-1),
                               pdIdent(~timeafterpeak-1)))),
          data=data,
          na.action=na.exclude)
tab_model(delete3)
```

```{r}
data$dummy <- factor(1)
delete4 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1, na.action=na.exclude, 
            random = pdBlocked( list( pdIdent( ~ id), pdIdent( ~ timebeforepeak - 1), pdIdent( ~ timeafterpeak - 1))))
                                                                 
                                                                 
                                                                 
tab_model(delete4)
```

## an old book 

### grouped data

```{r}
data$Dummy <- factor(1)
groupeddata0 <- groupedData(cortvalue ~ 1 | Dummy, data)
```

```{r}
groupeddata <- groupedData(cortvalue ~ 1 | id, data=data)
```

```{r}
groupeddata2 <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
```

### model


> fm1Assay <- lme( logDens ~ sample * dilut, Assay,
+ random = pdBlocked(list(pdIdent(~ 1), pdIdent(~ sample - 1),
+ pdIdent(~ dilut - 1))) )

```{r good?}
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata0,
            na.action=na.exclude,
            random = pdBlocked(list(pdIdent(~ 1), pdIdent(~ timebeforepeak - 1), pdIdent(~ timeafterpeak - 1))))

summary(mod1)
tab_model(mod1)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | Dummy, data)
delete1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1,
    na.action = na.exclude,
    random=pdBlocked(list(pdIdent(~ 0 + timebeforepeak),
                          pdIdent(~ 0 + timeafterpeak))))
```

```{r actual decent??}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | Dummy, data)
delete1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            data=mydata,
    na.action = na.exclude,
    random=pdDiag( ~ timebeforepeak + timeafterpeak))
summary(delete1)
tab_model(delete1)
```

```{r }
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1,
    na.action = na.exclude,
    random=pdDiag( ~ timebeforepeak + timeafterpeak))
summary(delete1)
tab_model(delete1)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=data1,
    na.action = na.exclude,
    random=pdDiag( ~ timebeforepeak + timeafterpeak))
summary(delete1)
tab_model(delete1)
```


## ok i actually read the things now


> PROC MIXED DATA=longdata COVTEST METHOD=REML;
	CLASS ID ;
	MODEL Cortwinbox = Cort_baseline_winbox
	       TimeBeforePeak2
	       TimeAfterPeak2
			   threatcomp_mc
			   threatcomp_mc*Cort_baseline_winbox 
			   threatcomp_mc*TimeBeforePeak2 
			   threatcomp_mc*TimeAfterPeak2
	RANDOM intercept TimeBeforePeak2 TimeAfterPeak2/SUB=ID TYPE=ar(1) GCORR; 
	RUN; QUIT;


```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete1.1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random=pdBlocked(list(pdIdent(~ 1),
                          pdIdent(~ timebeforepeak-1), # 0 + and -1 are the same
                          pdIdent(~ timeafterpeak-1))))
tab_model(delete1.1)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = list(Dummy = pdBlocked(list(~timebeforepeak-1, ~timeafterpeak-1))))
tab_model(delete2)
```


```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = pdBlocked(list(~timebeforepeak-1, ~timeafterpeak-1)))
tab_model(delete2)
```


```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = list(Dummy = pdBlocked(list(~timebeforepeak-1, ~timeafterpeak-1))))
tab_model(delete2)
summary(delete2)
```

```{r}
data$Dummy <- factor(1)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = list(id = pdBlocked(list(pdIdent(~ timebeforepeak-1), pdIdent( ~ timeafterpeak-1)))))
tab_model(delete2)
```

```{r}
data$Dummy <- factor(1)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = pdBlocked(list(pdIdent(~ timebeforepeak-1), pdIdent( ~ timeafterpeak-1))))
tab_model(delete2)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = list(id = pdDiag(~ timebeforepeak + timeafterpeak)))
tab_model(delete2)
```

```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = pdBlocked(~ timebeforepeak + timeafterpeak)))
tab_model(delete2)
```


```{r}
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
            corr = corAR1(), # specifies AR1 structure
            #control = ctrl,
            method = "REML", # specifies REML fit
    na.action = na.exclude,
    random = pdBlocked(list(pdIdent(~ timebeforepeak-1), pdIdent( ~ timeafterpeak-1))))
tab_model(delete2)
```

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
    na.action = na.exclude,
    random = pdBlocked(list(pdDiag(~ id), pdIdent(~ timebeforepeak - 1), pdIdent(~ timeafterpeak - 1))))
tab_model(delete2)
```

```{r}

data$Dummy <- factor(1)
data1 <- groupedData(cortvalue ~ 1 | id, data)
delete2 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=groupeddata2,
    na.action = na.exclude,
    random = list(Dummy = pdBlocked(list(~timebeforepeak-1, ~timeafterpeak-1))))
tab_model(delete2)
summary(delete2)
```

```{r}
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            na.action=na.exclude,
            random = ~ 1 | id)
summary(mod1)
tab_model(mod1)
```

https://stackoverflow.com/questions/36342072/how-to-get-two-random-effects-crossed-with-one-nested-in-the-other-in-nlme

https://rdrr.io/cran/nlme/man/pdBlocked.html WE NEED THIS!!!

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = pdBlocked(list(pdDiag(~ timebeforepeak - 1), pdDiag(~ timeafterpeak - 1))))
summary(mod1)
tab_model(mod1)
```

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = pdBlocked(list(pdDiag(~ id), pdIdent(~ timeafterpeak), pdIdent(~timebeforepeak))))
summary(mod1)
tab_model(mod1)
```

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = pdBlocked(list(pdDiag(~ id), pdIdent(~ timeafterpeak), pdIdent(~timebeforepeak))))
summary(mod1)
tab_model(mod1)
```

https://stats.stackexchange.com/questions/332103/how-to-specify-a-model-with-spatial-correlation-and-crossed-random-intercepts-in

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mydata$dummy = 1
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = list(dummy=pdBlocked(list(pdDiag(~ 1), pdIdent(~ timeafterpeak-1), pdIdent(~timebeforepeak-1)))))
summary(mod1)
tab_model(mod1)
```


```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mydata$dummy <- 1
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = pdBlocked(list(pdDiag(~ 1), pdIdent(~ timeafterpeak-1), pdIdent(~timebeforepeak-1))))
summary(mod1)
tab_model(mod1)
```

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mydata$dummy <- 1
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(form=~1|id), # specifies AR1 structure
            method = "REML", # specifies REML fit
            #control = ctrl, # optimizes model
            na.action=na.exclude,
            random = pdBlocked(list(pdIdent(~ timeafterpeak-1), pdIdent(~timebeforepeak-1))))
summary(mod1)
tab_model(mod1)
```

```{r}
options(contrasts = c(factor = "contr.SAS", ordered = "contr.poly"))
mydata <- groupedData(cortvalue ~ timebeforepeak + timeafterpeak | id, data=data)
mydata$dummy <- 1
mod1 <- lme(cortvalue ~ timebeforepeak + # Fixed effect
            timeafterpeak + # Fixed effect
            baseline + # Fixed effect
            ThreatCompc + ThreatCompc*timebeforepeak + 
            ThreatCompc*timeafterpeak + ThreatCompc*baseline,
            data=mydata,
            corr = corAR1(form=~1|id), # specifies AR1 structure
            method = "REML", # specifies REML fit
            control = ctrl, # optimizes model
            na.action=na.exclude, random=list(id = pdBlocked(list(pdIdent(~timebeforepeak-1), pdIdent(~timeafterpeak-1),
            weights = varIdent(form = ~1|id)))))

summary(mod1)
tab_model(mod1)
```
