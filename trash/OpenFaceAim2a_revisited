---
title: 'OpenFaceAim2a: Revisited'
author: "Julianna Calabrese"
date: "Last updated 1/24/2019"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: false
    theme: united
    highlight: tango
  pdf_document: default
editor_options:
  chunk_output_type: console
---

```{r setup, include=FALSE}
#install.packages("mosaic")
#install.packages("ggplot2")
#install.packages("tidyr")
#install.packages("dplyr")
#install.packages("psych")
#install.packages("nlme")
#install.packages("plyr")
#install.packages("Hmisc")
#install.packages("rmarkdown")
#install.packages("shiny")
#install.packages("yaml")
#install.packages("rapportools")
#install.packages("lavaan")
#install.packages("lme4")
#install.packages("corrr")
#install.packages("corrplot")
#install.packages("reshape2")
#install.packages("lmerTest")
#install.packages("multcomp")
#install.packages("optimx")
#install.packages("MuMIn")
#install.packages("Rmisc")
#install.packages("jsonlite")
#install.packages("knitr")
#install.packages("taRifx")
#install.packages("papeR")
#install.packages("stargazer")
#install.packages("kableExtra")
#install.packages("broom")
#install.packages("xtable")
#install.packages("sjPlot")
#install.packages("sjstats")
#install.packages("sjlabelled")
#install.packages("sjmisc")
#install.packages("ggeffects")
#install.packages("glmmTMB")
#install.packages("bindrcpp")
#install.packages("pbkrtest")
#install.packages("devtools")
#devtools::install_github('sfraundorf/psycholing')
#install.packages("pander")
#install.packages("coefplot")
#devtools::install_github("cardiomoon/ggiraphExtra")
#install.packages("languageR")
#install.packages("mlVar")
#install.packages("brms")

library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(yaml)
library(rapportools)
library(lavaan)
library(lme4)
library(corrr)
library(corrplot)
library(reshape2)
library(lmerTest)
library(multcomp)
library(optimx)
library(MuMIn)
library(Rmisc)
library(jsonlite)
library(knitr)
library(taRifx)
library(papeR)
library(stargazer)
library(kableExtra)
library(broom)
library(xtable)
library(sjPlot)
library(sjstats)
library(sjlabelled)
library(sjmisc)
library(ggeffects)
library(glmmTMB)
library(bindrcpp)
library(pbkrtest)
library(devtools)
library(psycholing)
library(pander)
library(coefplot)
library(ggiraphExtra)
library(languageR)
library(mlVAR)
library(brms)
```

```{r Load in data, include=FALSE}
cp_long <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_long.csv", header=TRUE, sep=",")
#cp_long <- read.csv(file="/Users/Julianna/Desktop/data/cp_long.csv", header=TRUE, sep=",")
cp_long$X <- NULL

cp_long$gender <- as.integer(cp_long$gender)
cp_long$gendercat <- as.character(cp_long$gendercat)
cp_long$male <- as.integer(cp_long$male)
cp_long$female <- as.integer(cp_long$female)
cp_long$genderold <- NULL
cp_long$baseline <- as.numeric(cp_long$cort_baseline_Win)
cp_long$baselineC <- as.numeric(cp_long$cort_baseline_WinC)
cp_long$cort_baseline_Win <- NULL
cp_long$cort_baseline_WinC <- NULL
```

## Introduction

In this file, I do my best to follow the instructions as laid out in Lopez-Duran, Mayer, & Abelson 2014. I wil try to explain all the code written in this file, why I do it, and why things may look weird at times. I will also try to name objects, variables, and models as consistently as possible.

Since Lopez-Duran, Mayer, & Abelson's 2014 paper utilized the PROC MIXED command in SAS, this RMarkdown file will use the lmer() command as part of the lme4 package. More information about lmer() can be found here: https://cran.r-project.org/web/packages/SASmixed/vignettes/Usinglmer.pdf

## Differences between lme4 and nlme

https://stats.stackexchange.com/questions/5344/how-to-choose-nlme-or-lme4-r-library-for-mixed-effects-models

https://rpsychologist.com/r-guide-longitudinal-lme-lmer#first-order-autoregressive-ar1-residuals

https://bbolker.github.io/mixedmodels-misc/notes/corr_braindump.html

https://freshbiostats.wordpress.com/2013/07/28/mixed-models-in-r-lme4-nlme-both/

https://stats.stackexchange.com/questions/29617/differences-between-proc-mixed-and-lme-lmer-in-r-degrees-of-freedom

https://stat.ethz.ch/pipermail/r-help/2003-October/040798.html

https://folk.uib.no/nzlkj/psychR/day4/04_lme.pdf

http://rcompanion.org/handbook/G_03.html

https://biostatmatt.com/archives/2718

https://stats.stackexchange.com/questions/13166/rs-lmer-cheat-sheet

## Model building

### Equation from Lopez-Duran 2014

$\begin{aligned}
Cortisol = \beta_0  
& + (\beta_1 \cdot Sex) \\
& + (\beta_2 \cdot TimeBeforePeak) \\
& + (\beta_3 \cdot TimeAfterPeak) \\
& + (\beta_4 \cdot Sex \cdot TimeBeforePeak) \\
& + (\beta_5 \cdot Sex \cdot TimeAfterPeak) \\
\end{aligned}$

### Definitions

* b0 = intercept aka peak
* b1 = the impact of sex on levels at the group peak time
* b2 = the activation slope for males
* b3 = the regulation slope for males
* b4 = the impact of sex (females) on the activation slope
* b5 = the impact of sex (females) on the regulation slope
* timebeforepeak = the reactivity slope / activation
* timeafterpeak = the recovery slope / regulation

The variable "gender" is a binary variable of 0 = male and 1 = female. 

## Base model 

The model below (aka "mod1") uses variables that were made using the variables "stimeC" and "peaktimenumC". "stime" is the actual time variable (e.g. 837, 844, 855) and "peaktimenum" is the time when the participant's cortisol value ("cortvalue") was highest. Therefore, for all the rows that have ID 10003, each row has a different "stime" value (e.g. 837, 844, 855, ...), but each row has the same "peaktimenum" value (e.g. 844, 844, 844, ...), indicating that the highest cortisol value was observed at stime 844. "stimeC" is the zero-centered version of "stime" and "peaktimenumC" is the zero-centered version of "peaktimenum". 

The variable "peaknamenum" corresponds to the order in which the sample were taken. For example, for ID 10003, the time at which his cortisol peaked was 844, which was the second sample taken (out of the nine samples related to the SECPT). Therefore, for ID 10003, his "peaknamenum" is "2". 

Therefore, we want "peaknamenum" to be a character, but we want almost everything else to be numeric or an integer. 

```{r Base model with actual time data, results = 'hide'}
base1 <- lmer(cortvalue ~ timebeforepeak + timeafterpeak + baseline + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(base1)
```

```{r}
base2 <- lme(cortvalue ~ timebeforepeak + timeafterpeak + baseline, 
        random = ~ 1 | id, 
        correlation = corAR1(),
        data=cp_long)
summary(base2)
```

```{r}
base3 <- lme(cortvalue ~ baseline + timebeforepeak + timeafterpeak, 
          random=~1|id, timebeforepeak, timeafterpeak, 
          correlation=corAR1(),
          data = cp_long)
summary(base3)
```

# here!!

```{r}
cp_long$dummy1 <- factor(1)
cp_long <- groupedData(cortvalue ~ 1 | dummy1, cp_long)

base4 <- lme(cortvalue ~ 1, data=cp_long,
    random=pdBlocked(list(pdIdent(~ 0 + id),
                          pdIdent(~ 0 + timebeforepeak),
                          pdIdent(~ 0 + timeafterpeak))))
summary(base4)

https://biostatmatt.com/archives/2718
```

```{r}
list1 <- c(cp_long$id, cp_long$timebeforepeak, cp_long$timeafterpeak)
list <- as.matrix(list1)

base4.5 <- lme(cortvalue ~ timebeforepeak + timeafterpeak + baseline, 
        random = ~ 1 | list, 
        correlation = corAR1(),
        data=cp_long)
summary(base4.5)
```


```{r}
base5 <- glmmTMB(cortvalue ~ timebeforepeak + timeafterpeak + baseline 
              + (1|id) + (1|timebeforepeak) + (1|timeafterpeak),
              data = cp_long, REML=TRUE)
summary(base5)
```

```{r}
base5.5 <- glmmTMB(cortvalue ~ timebeforepeak + timeafterpeak + baseline
                   + (1|id) + (1|timebeforepeak) + (1|timeafterpeak),
                   correlation = corAR1(),
              data = cp_long, REML=TRUE)
summary(base5.5)
```

```{r}
base6 <- glmmTMB(cortvalue ~ timebeforepeak + timeafterpeak + baseline + ar1(1|id) + (1|timebeforepeak) + (1|timeafterpeak), data=cp_long, family=gaussian)
```

```{r}
https://stats.stackexchange.com/questions/58669/specifying-multiple-separate-random-effects-in-lme

base7 <- lme(cortvalue ~ timebeforepeak + timeafterpeak + baseline, random=list(year=~1, date=~time), data=cp_long, weights=varIdent(form=~1|id))
```


http://rcompanion.org/handbook/G_03.html

```{r echo=FALSE, results = 'asis'}
class(mod1) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(mod1, title = "Base Model Summary Output (mod1)", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

In mod1, intercept (aka peak) is significant, as well as TimeBeforePeak and TimeAfterPeak.

## Base model findings

Both mod1 and mod2 have significant results, so I will use the anova() function to compare the fit.

```{r, include=FALSE}
anova(mod1, mod2)
anova(mod2, mod1)
```

```{r warning=FALSE, message=FALSE}
pander(anova(mod1, mod2))
```

However, it like mod2 has the better fit, so I will abandon mod1 and rename mod2 to 'base'.

```{r echo=FALSE, results = 'hide'}
class(mod1) <- "lmerModLmerTest"
class(mod2) <- "lmerModLmerTest"
```

```{r echo=FALSE}
rm(mod1)
base <- mod2
rm(mod2)
```

## Base model visualizations

```{r Figure 2: Barplot with error bars, echo=FALSE}
timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)
cp_long$Sex <- cp_long$gender
cp_long$Sex <- as.factor(cp_long$Sex)
levels(cp_long$Sex) <- c('Male','Female')
cp <- cp_long
cp$sampletime <- as.factor(cp$sampletime)
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
  return(data_sum)
}
cp1 <- data_summary(cp_long, varname="cortvalue", groupnames=c("gender", "sampletime", "Sex"))
cp1$sampletime <- as.factor(cp1$sampletime)
ggplot(cp1, aes(x=sampletime, y=cortvalue, fill=Sex)) + 
  geom_bar(stat="identity", color="black", 
           position=position_dodge()) +
  scale_fill_manual("legend", values = c("Male" = "deepskyblue", "Female" = "palevioletred")) +
  geom_errorbar(aes(ymin=cortvalue-sd, ymax=cortvalue+sd), width=.2,
                position=position_dodge(.9)) + ggtitle("Barplot by gender with error bars") + scale_x_discrete(name = "Time") + scale_y_continuous(name = "Uncentered cortisol values") + theme_set(theme_gray(base_size = 18))
```

```{r Object removal 1, include=FALSE}
rm(cp)
rm(cp1)
rm(timeticks)
rm(data_summary)
```

## Emotion models with interaction

As suggested by Dr. Lopez-Duran on 1/22/19, I should add interaction to the emotion models, i.e. Anger x TimeBeforePeak and Anger x TimeAfterPeak. When creating the below models, I also tried adding Emotion x TimeBeforePeak x TimeAfterPeak, but since that ended up being redunant/non-significant, the idea was dropped.

### Anger with Interaction

```{r Base model plus anger and interaction, results = 'hide'}
anger_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + angerC + (angerC*gender) + (angerC*timebeforepeak) + (angerC*timeafterpeak) + (1|id), data = cp_long, REML=TRUE)
summary(anger_x)
```

```{r}
anger_x <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + angerC + (angerC*timebeforepeak) + (angerC*timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(anger_x)
```

```{r}
fear_x <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + fearC + (fearC*timebeforepeak) + (fearC*timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(fear_x)
```

```{r}
happy_x <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + happinessC + (happinessC*timebeforepeak) + (happinessC*timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(happy_x)
```

```{r}
sad_x <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + sadnessC + (sadnessC*timebeforepeak) + (sadnessC*timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(sad_x)
```

```{r}
ctq_x <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + ctqsumC + (ctqsumC*timebeforepeak) + (ctqsumC*timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(ctq_x)
```

```{r echo=FALSE}
class(anger_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Anger", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sex * Anger", "TimeBeforePeak * Anger", "TimeAfterPeak * Anger")

colorder <- c("est", "df", "se", "p")

tab_model(anger_x, title = "AngerX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Anger and its interactions are not significant.

### Fear with Interaction

```{r Base model plus fear and interaction, results = 'hide'}
fear_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + fearC + (fearC*gender) + (fearC*timebeforepeak) + (fearC*timeafterpeak) + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(fear_x)
```

```{r echo=FALSE}
class(fear_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Fear", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sex * Fear", "TimeBeforePeak * Fear", "TimeAfterPeak * Fear")

colorder <- c("est", "df", "se", "p")

tab_model(fear_x, title = "FearX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Fear and its interactions are not significant.

### Happiness with Interaction

```{r Base model plus happiness and interaction, results = 'hide'}
happy_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + happinessC + (happinessC*gender) + (happinessC*timebeforepeak) + (happinessC*timeafterpeak) + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(happy_x)
```

```{r echo=FALSE}
class(happy_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Happiness", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sex * Happiness", "TimeBeforePeak * Happiness", "TimeAfterPeak * Happiness")

colorder <- c("est", "df", "se", "p")

tab_model(happy_x, title = "HappyX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

In the happy interaction model, the interaction between gender and TimeAfterPeak is significant, as well as the interaction between happiness and TimeAfterPeak with = 0.0218.

### Sadness with Interaction

```{r Base model plus sadness and interaction, results = 'hide'}
sad_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + sadnessC + (sadnessC*gender) + (sadnessC*timebeforepeak) + (sadnessC*timeafterpeak) + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(sad_x)
```

```{r echo=FALSE}
class(sad_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Sadness", "Sex * TimeBeforePeak", "Sadness * TimeAfterPeak", "Sex * Sadness", "TimeBeforePeak * Sadness", "TimeAfterPeak * Sadness")

colorder <- c("est", "df", "se", "p")

tab_model(sad_x, title = "SadX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Sadness and its interactions are not significant.

### Pain with Interaction

```{r Base model plus pain and interaction, results = 'hide'}
pain_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + painC + (painC*gender) + (painC*timebeforepeak) + (painC*timeafterpeak) + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(pain_x)
```

```{r echo=FALSE}
class(pain_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "Pain", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sex * Pain", "TimeBeforePeak * Pain", "TimeAfterPeak * Pain")

colorder <- c("est", "df", "se", "p")

tab_model(pain_x, title = "PainX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Pain and its interactions are not significant.

## Emotion models with interactions conclusions

```{r Model reclassifying 2, include=FALSE}
class(base) <- "lmerModLmerTest"
class(anger) <- "lmerModLmerTest"
class(fear) <- "lmerModLmerTest"
class(happy) <- "lmerModLmerTest"
class(sad) <- "lmerModLmerTest"
class(pain) <- "lmerModLmerTest"
class(anger_x) <- "lmerModLmerTest"
class(fear_x) <- "lmerModLmerTest"
class(happy_x) <- "lmerModLmerTest"
class(sad_x) <- "lmerModLmerTest"
class(pain_x) <- "lmerModLmerTest"
```

In the basic emotion models (without interactions), the only interesting predictor was sadness, which was not a significant predictor in its model, but demonstrated better fit compared to the other models with the anova() function. However, when I solely compared the basic sad model with the base model, sadness lost its significance.

In the above tables, the most interesting predictor was happiness. In the happy interaction model, happiness was not a significant predictor (p = 0.3273), but the interaction between happiness and TimeAfterPeak was significant (p = 0.0218). There was also an interaction between gender and TimeAfterPeak, which was not seen in previous models, although the interaction between gender and happiness was not observed (p = 0.2870).

```{r include=FALSE}
anova(anger, anger_x)
anova(fear, fear_x)
anova(happy, happy_x)
anova(sad, sad_x)
anova(pain, pain_x)
```

```{r include=FALSE}
anova(base, happy_x)
anova(base, happy, happy_x)
```

```{r}
pander(anova(base, happy_x))
```

When you solely compared the happy interaction model to base, neither models have significantly better fit.

```{r}
pander(anova(anger, anger_x))
pander(anova(fear, fear_x))
pander(anova(happy, happy_x))
pander(anova(sad, sad_x))
pander(anova(pain, pain_x))
```

However, when you compare a basic emotion model to its version with interactions, the only comparison that borders significance in happy with p = 0.08494.

### Interaction model visualizations

## Happy interaction model visualization

```{r Figure 4: Happy interaction model, echo=FALSE}
timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)

cp_long$Sex <- cp_long$gender
cp_long$Sex <- as.factor(cp_long$Sex)
levels(cp_long$Sex) <- c('Male','Female')

ggplot(cp_long, aes(samplepeaknamenum, cortvalue, color=Sex, shape=Sex)) +
  stat_summary(fun.y=mean, geom="point", size=5) +
  scale_color_manual(values = c("Male" = "deepskyblue", "Female" = "palevioletred")) +
  stat_summary(fun.data=mean_se, geom="errorbar", linetype="solid", width=0.6) +
  stat_summary(aes(y=fitted(happy_x)), fun.y=mean, geom="line", lwd=1.5, col="gold") +
  scale_shape_manual(values=c(16, 17)) + labs(x="Sample Time Peak", y="Cortisol", color="Gender", shape="Gender") + theme_bw(base_size=18) +
  theme(legend.justification=c(0,1), legend.position=c(0,1),
        legend.background=
          element_rect(fill="white", color="black")) + scale_x_continuous(breaks=timeticks) + ggtitle("Happy interaction model by peak sample time")
```

## Adding CTQ to models with and without interaction

Since the original proposal references the importance of trauma, l will add CTQ Total Sum (centered) to see if it makes a difference. Here is the CTQ base model. 

### CTQ base model

```{r Base model plus CTQ, results = 'hide'}
ctq <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + ctqsumC + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(ctq)
```

```{r echo=FALSE}
class(ctq) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "CTQ Total Sum", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(ctq, title = "Basic CTQ Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

When CTQ is added, Sex X TimeBeforePeak and Sex X TimeAfterPeak remain close to significance, but not quiet yet. Let's now add CTQ interactions to the above model.

```{r, include=FALSE}
anova(base, ctq)
```

```{r warning=FALSE, message=FALSE}
pander(anova(base, ctq))
```

The basic CTQ model isn't that much better than the base model. 

### CTQ interaction model

```{r Base model plus CTQ and interaction, results = 'hide'}
ctq_x <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + ctqsumC + (ctqsumC*gender) + (ctqsumC*timebeforepeak) + (ctqsumC*timeafterpeak) + (1|id) + (1|time), data = cp_long, REML=TRUE)
summary(ctq_x)
```

```{r echo=FALSE}
class(ctq_x) <- "lmerMod"

labels <- c("Intercept", "Sex", "TimeBeforePeak", "TimeAfterPeak", "CTQ Total Sum", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sex * CTQ", "TimeBeforePeak * CTQ", "TimeAfterPeak * CTQ")

colorder <- c("est", "df", "se", "p")

tab_model(ctq_x, title = "CTQX Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

When CTQ Total Sum and its interactions are added to the base model, the following pieces become significant:

* TimeBeforePeak
* TimeAfterPeak
* Sex X TimeBeforePeak
* Sex X TimeAfterPeak
* CTQ X TimeBeforePeak
* CTQ X TimeAfterPeak

```{r, include=FALSE}
anova(base, ctq, ctq_x)
```

```{r warning=FALSE, message=FALSE}
pander(anova(base, ctq, ctq_x))
```

According to the anova() function, adding the CTQ interactions improves model fit better compared than the base model and the CTQ model without interactions. 

## New models

```{r}
base <- lmer(cortvalue ~ (timebeforepeak) + (timeafterpeak) + (1|id) + (1|timebeforepeak) + (1|timeafterpeak), data = cp_long, REML=TRUE)
summary(base)
```

```{r}
base1 <- lmer(cortvalue ~ (sampletimebeforepeak) + (sampletimeafterpeak) + (1|id) + (1|sampletimebeforepeak) + (1|sampletimeafterpeak), data = cp_long, REML=TRUE)
summary(base1)
```

```{r Writing out the new cp_long dataset, include=FALSE}
#write.csv(cp_long, file="/Users/Julianna/Desktop/data/cp_long_aim2a.csv")
#write.csv(cp_long, file="C:/Users/jrcala/Documents/My Research/RStudio/cp_long_aim2a.csv")
```
