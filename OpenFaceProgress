---
title: "OpenFaceProgress"
author: "Julianna Calabrese"
date: "Last edited 2/8/2019"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(shiny)
library(yaml)
library(rapportools)
```

## Read in video AU data

```{r}
cp_full <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_full.csv", header=TRUE, sep=",")

#cp_full <- read.csv(file="/Users/Julianna/Desktop/data/cp_full.csv", header=TRUE, sep=",")

cp_full$X <- NULL
```

## Read in survey measures and demographic data

```{r Read in CTQ}
ctq <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/ctq.csv", header=TRUE, sep=",")

#ctq <- read.csv(file="/Users/Julianna/Desktop/data/ctq.csv", header=TRUE, sep=",")
```

```{r Read in Gender Data}
gender <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/gender.csv", header=TRUE, sep=",")

#gender <- read.csv(file="/Users/Julianna/Desktop/data/gender.csv", header=TRUE, sep=",")
```

```{r Read in Medication Data}
medication <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/medication.csv", header=TRUE, sep=",")

#medication <- read.csv(file="/Users/Julianna/Desktop/data/medication.csv", header=TRUE, sep=",")
```

## Read in cortisol data

```{r Read in cortisol data}
cortisol <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cortisol.csv", header=TRUE, sep=",")

#cortisol <- read.csv(file="/Users/Julianna/Desktop/data/cortisol.csv", header=TRUE, sep=",")

cortisol$X <- NULL
```

## Read in threatdep data

```{r}
threatdep <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/threatdep.csv", header=TRUE, sep=",")

#threatdep <- read.csv(file="/Users/Julianna/Desktop/data/threatdep.csv", header=TRUE, sep=",")

threatdep$X <- NULL
```

## Rename variables

```{r}
names(cp_full)[names(cp_full) == "FF_ID"] <- "id"
names(ctq)[names(ctq) == "誰..id"] <- "id"
names(medication)[names(medication) == "誰..id"] <- "id"
names(threatdep)[names(threatdep) == "ff_id"] <- "id"
```

## Merge the survey, cortisol, and video data

I don't want to drop a row if it contains an NA value in any of the datasets. I don't mind NAs in the ctq or cortisol data. However, if anything is missing from the cp_full data, then it's missing entirely.

Therefore, I should merge cp_full and ctq first. And then do the thing where I drop all with NA. Then merge that dataframe with the cortisol dataframe.

https://stackoverflow.com/questions/11254524/omit-rows-containing-specific-column-of-na

```{r}
#Merge cp_full and ctq

join1 <- merge(cp_full,ctq,all=TRUE,by='id')
#join1 has 237 observations.

#Merge join1 with cortisol to create join2

join2 <- merge(join1,cortisol, all=TRUE, by = 'id')
#join2 has 237 observations.

#Remove rows where some AU data is missing

which( colnames(join2)=="AU01_r") #7

join3 <- join2[complete.cases(join2[ , 7]),]
#join3 has 185 observations.

#View(join3)
#write.csv(join3, "C:/Users/jrcala/Documents/My Research/RStudio/join3.csv")
```

# Modify the CTQ Items

## Remove non-reversed-coded items

```{r}
which( colnames(join3)=="ctq1_2") #48
join3 <- join3[ -c(48)]

which( colnames(join3)=="ctq1_5") #50
join3 <- join3[ -c(50)]

which( colnames(join3)=="ctq1_7") #51
join3 <- join3[ -c(51)]

which( colnames(join3)=="ctq2_13") #56
join3 <- join3[ -c(56)]

which( colnames(join3)=="ctq3_19") #61
join3 <- join3[ -c(61)]

which( colnames(join3)=="ctq4_26") #67
join3 <- join3[ -c(67)]

which( colnames(join3)=="ctq4_28") #68
join3 <- join3[ -c(68)]

which( colnames(join3)=="ctq_complete") #68
join3 <- join3[ -c(68)]
```

## Modify the CTQ data so that all the -99/88/77's are now NA

```{r}
which(join3 == -99, arr.ind=TRUE) #None.
#join3[join3 == -99] <- NA

which(join3 == 88, arr.ind=TRUE) #Some.
join3[join3 == 88] <- NA

which(join3 == 77, arr.ind=TRUE) #None.
#join3[join3 == 77] <- NA

#join3 has 185 observations.
```

## Merge cp_joined with gender

```{r Merging with gender}
#Merge join3 and gender
join4 <- merge(join3,gender,all=TRUE,by='id')
#join4 has 237 observations.

which( colnames(join4)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join4[which(is.na(join4[,2])),] #Which rows are NA for the "frame" column?
#all(is.na(cp_joined2))

#Remove rows if frame is NA
join5 <- join4[!is.na(join4$frame),]
#join5 has 185 observations.
```

## Merge cp_joined with medication

```{r}
#Merge join5 and medication
join6 <- merge(join5,medication,all=TRUE,by='id')
#join6 has 237 observations.

which( colnames(join6)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join6[which(is.na(join6[,2])),] #Which rows are NA for the "frame" column?

#Remove rows if frame is NA
join7 <- join6[!is.na(join6$frame),]
#join7 has 185 observations.
```

## Merge with threatdep

```{r}
#Merge join7 and threatdep
join8 <- merge(join7,threatdep,all=TRUE,by='id')
#join8 has 237 observations.

which( colnames(join8)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join8[which(is.na(join8[,2])),] #Which rows are NA for the "frame" column?

#Remove rows if frame is NA
join9 <- join8[!is.na(join8$frame),]
#join9 has 185 observations.
```

## Cleaning up

```{r}
cp_joined <- join9

rm(join1)
rm(join2)
rm(join3)
rm(join4)
rm(join5)
rm(join6)
rm(join7)
rm(join8)
rm(join9)
```

## Write cp_joined

```{r}
write.csv(cp_joined, "C:/Users/jrcala/Documents/My Research/RStudio/cp_joined.csv")

#write.csv(cp_joined, "/Users/Julianna/Desktop/data/cp_joined.csv")

#cp_joined has 185 observations and 325 variables.
```

```{r}
rm(cortisol)
rm(cp_full)
rm(cp_joined)
rm(ctq)
rm(gender)
rm(medication)
rm(threatdep)
```

## Do the same with cp_master!

## Load in cp_master


## Read in video AU data

```{r}
cp_master <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_master.csv", header=TRUE, sep=",")

#cp_master <- read.csv(file="/Users/Julianna/Desktop/data/cp_master.csv", header=TRUE, sep=",")

cp_master$X <- NULL
```

## Read in survey measures and demographic data

```{r Read in CTQ}
ctq <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/ctq.csv", header=TRUE, sep=",")

#ctq <- read.csv(file="/Users/Julianna/Desktop/data/ctq.csv", header=TRUE, sep=",")
```

```{r Read in Gender Data}
gender <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/gender.csv", header=TRUE, sep=",")

#gender <- read.csv(file="/Users/Julianna/Desktop/data/gender.csv", header=TRUE, sep=",")
```

```{r Read in Medication Data}
medication <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/medication.csv", header=TRUE, sep=",")

#medication <- read.csv(file="/Users/Julianna/Desktop/data/medication.csv", header=TRUE, sep=",")
```

## Read in cortisol data

```{r Read in cortisol data}
cortisol <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cortisol.csv", header=TRUE, sep=",")

#cortisol <- read.csv(file="/Users/Julianna/Desktop/data/cortisol.csv", header=TRUE, sep=",")

cortisol$X <- NULL
```

## Read in threatdep data

```{r}
threatdep <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/threatdep.csv", header=TRUE, sep=",")

#threatdep <- read.csv(file="/Users/Julianna/Desktop/data/threatdep.csv", header=TRUE, sep=",")

threatdep$X <- NULL
```

## Rename variables

```{r}
names(cp_master)[names(cp_master) == "FF_ID"] <- "id"
names(ctq)[names(ctq) == "誰..id"] <- "id"
names(medication)[names(medication) == "誰..id"] <- "id"
names(threatdep)[names(threatdep) == "ff_id"] <- "id"
```

## Merge the survey, cortisol, and video data

I don't want to drop a row if it contains an NA value in any of the datasets. I don't mind NAs in the ctq or cortisol data. However, if anything is missing from the cp_master data, then it's missing entirely.

Therefore, I should merge cp_master and ctq first. And then do the thing where I drop all with NA. Then merge that dataframe with the cortisol dataframe.

https://stackoverflow.com/questions/11254524/omit-rows-containing-specific-column-of-na

```{r}
#Merge cp_master and ctq
#cp_master has 1771980 observations and 46 variables.

join1 <- merge(cp_master,ctq,all=TRUE,by='id')
#join1 has 1772032 observations and 95 variables.

#Merge join1 with cortisol to create join2

join2 <- merge(join1,cortisol, all=TRUE, by = 'id')
#join2 has 1772032 observations and 219 variables.

#Remove rows where some AU data is missing

which( colnames(join2)=="AU01_r") #7

join3 <- join2[complete.cases(join2[ , 7]),]
#join3 has 1771980 observations and 219 variables.

#View(join3)
#write.csv(join3, "C:/Users/jrcala/Documents/My Research/RStudio/join3.csv")
rm(join1)
rm(join2)
```

# Modify the CTQ Items

## Remove non-reversed-coded items

```{r}
which( colnames(join3)=="ctq1_2") #48
join3 <- join3[ -c(48)]

which( colnames(join3)=="ctq1_5") #50
join3 <- join3[ -c(50)]

which( colnames(join3)=="ctq1_7") #51
join3 <- join3[ -c(51)]

which( colnames(join3)=="ctq2_13") #56
join3 <- join3[ -c(56)]

which( colnames(join3)=="ctq3_19") #61
join3 <- join3[ -c(61)]

which( colnames(join3)=="ctq4_26") #67
join3 <- join3[ -c(67)]

which( colnames(join3)=="ctq4_28") #68
join3 <- join3[ -c(68)]

which( colnames(join3)=="ctq_complete") #68
join3 <- join3[ -c(68)]
```

## Modify the CTQ data so that all the -99/88/77's are now NA

```{r}
which(join3 == -99, arr.ind=TRUE) #None.
#join3[join3 == -99] <- NA

which(join3 == 88, arr.ind=TRUE) #Some.
join3[join3 == 88] <- NA

which(join3 == 77, arr.ind=TRUE) #None.
#join3[join3 == 77] <- NA

#join3 has 1771980 observations and 211 variables.
```

## Merge cp_joined with gender

```{r Merging with gender}
#Merge join3 and gender
join4 <- merge(join3,gender,all=TRUE,by='id')
#join4 has 237 observations.

which( colnames(join4)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join4[which(is.na(join4[,2])),] #Which rows are NA for the "frame" column?
#all(is.na(cp_joined2))

#Remove rows if frame is NA
join5 <- join4[!is.na(join4$frame),]
#join5 has 1771795 observations and 213 variables.

rm(join3)
rm(join4)
```

## Merge cp_joined with medication

```{r}
#Merge join5 and medication
join6 <- merge(join5,medication,all=TRUE,by='id')
#join6 has 1771847 observations and 329 variables.

which( colnames(join6)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join6[which(is.na(join6[,2])),] #Which rows are NA for the "frame" column?

#Remove rows if frame is NA
join7 <- join6[!is.na(join6$frame),]
#join7 has 1771795 observations and 329 variables.
rm(join5)
rm(join6)
```

## Merge with threatdep

```{r}
#Merge join7 and threatdep
join8 <- merge(join7,threatdep,all=TRUE,by='id')
#join8 has 1771847 observations and 336 variables.

which( colnames(join8)=="frame") #2 #Which column is "frame"?
options(max.print=10000000)

join8[which(is.na(join8[,2])),] #Which rows are NA for the "frame" column?

#Remove rows if frame is NA
join9 <- join8[!is.na(join8$frame),]
#join9 has 1771795 observations and 336 variables.
rm(join7)
rm(join8)
```

## Cleaning up

```{r}
cp_joined_master <- join9
rm(join9)
```

## Write cp_joined

```{r}
write.csv(cp_joined_master, "C:/Users/jrcala/Documents/My Research/RStudio/cp_joined_master.csv")

#write.csv(cp_joined_master, "/Users/Julianna/Desktop/data/cp_joined_master.csv")

#cp_joined_master has 11771795 observations and 336 variables.

#Just running this chunk took 8 minutes and 30 seconds. It's recommended to run everything above this chunk, then run this chunk separately. 
```
