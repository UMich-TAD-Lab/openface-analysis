---
title: 'Current Data Analysis for the Facial Expression/Cortisol Project'
author: "Julianna Calabrese"
date: "1/19/2019"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: false
    theme: united
    highlight: tango
  pdf_document: default
editor_options:
  chunk_output_type: console
---

```{r setup, include=FALSE}
#install.packages("mosaic")
#install.packages("ggplot2")
#install.packages("tidyr")
#install.packages("dplyr")
#install.packages("psych")
#install.packages("nlme")
#install.packages("plyr")
#install.packages("Hmisc")
#install.packages("rmarkdown")
#install.packages("shiny")
#install.packages("yaml")
#install.packages("rapportools")
#install.packages("lavaan")
#install.packages("lme4")
#install.packages("corrr")
#install.packages("corrplot")
#install.packages("reshape2")
#install.packages("lmerTest")
#install.packages("multcomp")
#install.packages("optimx")
#install.packages("MuMIn")
#install.packages("Rmisc")
#install.packages("jsonlite")
#install.packages("knitr")
#install.packages("taRifx")
#install.packages("papeR")
#install.packages("stargazer")
#install.packages("kableExtra")
#install.packages("broom")
#install.packages("xtable")
#install.packages("sjPlot")
#install.packages("sjstats")
#install.packages("sjlabelled")
#install.packages("sjmisc")
#install.packages("ggeffects")
#install.packages("glmmTMB")
#install.packages("bindrcpp")
#install.packages("pbkrtest")
#install.packages("devtools")
#devtools::install_github('sfraundorf/psycholing')
#install.packages("pander")

library(mosaic)
library(ggplot2)
library(tidyr)
library(dplyr)
library(psych)
library(nlme)
library(plyr)
library(Hmisc)
library(rmarkdown)
library(yaml)
library(rapportools)
library(lavaan)
library(lme4)
library(corrr)
library(corrplot)
library(reshape2)
library(lmerTest)
library(multcomp)
library(optimx)
library(MuMIn)
library(Rmisc)
library(jsonlite)
library(knitr)
library(taRifx)
library(papeR)
library(stargazer)
library(kableExtra)
library(broom)
library(xtable)
library(sjPlot)
library(sjstats)
library(sjlabelled)
library(sjmisc)
library(ggeffects)
library(glmmTMB)
library(bindrcpp)
library(pbkrtest)
library(devtools)
library(psycholing)
library(pander)
```

```{r Load in data, include=FALSE}
#cp_long <- read.csv(file="C:/Users/jrcala/Documents/My Research/RStudio/cp_long.csv", header=TRUE, sep=",")
cp_long <- read.csv(file="/Users/Julianna/Desktop/data/cp_long.csv", header=TRUE, sep=",")
cp_long$X <- NULL
```

## Introduction

In this file, I do my best to follow the instructions as laid out in Lopez-Duran, Mayer, & Abelson 2014. I wil try to explain all the code written in this file, why I do it, and why things may look weird at times. I will also try to name objects, variables, and models as consistently as possible.

Since Lopez-Duran, Mayer, & Abelson's 2014 paper utilized the PROC MIXED command in SAS, this RMarkdown file will use the lmer() command as part of the lme4 package. More information about lmer() can be found here: https://cran.r-project.org/web/packages/SASmixed/vignettes/Usinglmer.pdf

```{r Fixing gender types, include=FALSE}
cp_long$gender <- as.integer(cp_long$gender)
cp_long$gendercat <- as.character(cp_long$gendercat)
cp_long$male <- as.integer(cp_long$male)
cp_long$female <- as.integer(cp_long$female)
```

## Model building

### Equation from Lopez-Duran 2014

$\begin{aligned}
Cortisol = \beta_0  
& + (\beta_1 \cdot Sex) \\
& + (\beta_2 \cdot TimeBeforePeak) \\
& + (\beta_3 \cdot TimeAfterPeak) \\
& + (\beta_4 \cdot Sex \cdot TimeBeforePeak) \\
& + (\beta_5 \cdot Sex \cdot TimeAfterPeak) \\
\end{aligned}$

### Definitions

* b0 = intercept aka peak
* b1 = the impact of sex on levels at the group peak time
* b2 = the activation slope for males
* b3 = the regulation slope for males
* b4 = the impact of sex (females) on the activation slope
* b5 = the impact of sex (females) on the regulation slope
* timebeforepeak = the reactivity slope / activation
* timeafterpeak = the recovery slope / regulation

The variable "gender" is a binary variable of 0 = male and 1 = female. 

## Model using actual time values

The model below (aka "mod1") uses variables that were made using the variables "stimeC" and "peaktimenumC". "stime" is the actual time variable (e.g. 837, 844, 855) and "peaktimenum" is the time when the participant's cortisol value ("cortvalue") was highest. Therefore, for all the rows that have ID 10003, each row has a different "stime" value (e.g. 837, 844, 855, ...), but each row has the same "peaktimenum" value (e.g. 844, 844, 844, ...), indicating that the highest cortisol value was observed at stime 844. "stimeC" is the zero-centered version of "stime" and "peaktimenumC" is the zero-centered version of "peaktimenum". 

The variable "peaknamenum" corresponds to the order in which the sample were taken. For example, for ID 10003, the time at which his cortisol peaked was 844, which was the second sample taken (out of the nine samples related to the SECPT). Therefore, for ID 10003, his "peaknamenum" is "2". 

Therefore, we want "peaknamenum" to be a character, but we want almost everything else to be numeric or an integer. 

```{r include=FALSE}
cp_long$peaknamenum <- as.character(cp_long$peaknamenum)
cp_long$timetopeak <- as.numeric(cp_long$timetopeak)
cp_long$timebeforepeak <- as.numeric(cp_long$timebeforepeak)
cp_long$timeafterpeak <- as.numeric(cp_long$timeafterpeak)
cp_long$stimeC <- as.numeric(cp_long$stimeC)
cp_long$gender <- as.integer(cp_long$gender)
cp_long$female <- as.integer(cp_long$female)
```

```{r Base model with actual time data, results = 'hide'}
mod1 <- lmer(cortvalue ~ (gender) + (timebeforepeak) + (timeafterpeak) + (gender*timebeforepeak) + (gender*timeafterpeak) + (1|id) + (1|stimeC), data = cp_long, REML=TRUE)
summary(mod1)
```

```{r echo=FALSE, results = 'asis'}
class(mod1) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(mod1, title = "Base Model Summary Output (mod1)", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

## Model using "sample" time values

In cp_long, "samplepeaknamenum" is the variable that corresponds to the nine samples and the amount of minutes after the cold press task: 0, 3, 15, 25, 30, 35, 40, 45, 60.

Like shown above, alternatives include "stime" or "stimeC" (which is stime but zero-centered), which is the actual amount of minutes between each sample (e.g. 837, 844, 855, ...) or timenum, which is the mostly just the sample number. timenum is 4, 5, 6, 7, 8, 9, 10, 11, and 12, while timenum is "centered" (not really though--it just assumes that the fourth sample is actually the first sample, since we don't care about cortisol levels during the MRI) and is 1, 2, 3, 4, 5, 6, 7, 8, and 9.

Therefore, any variable that begins with "sample" is based off this 0, 3, 15, etc. sequence: samplepeaknamenum, sampletimetopeak, sampletimebeforepeak, and sampletimeafterpeak. The reason I went with the "sample" version of the time variable is because we would be able to treat time as a factor instead of as an integer or as a numeric variable. 

As opposed to the first model, I believe that the second model is the closest to the model in Lopez-Duran 2014 as possible.

![](/Users/Julianna/Desktop/data/ld2014table.png)

According to Table 2 in Lopez-Duran 2014, there were no "actual time" values (i.e. 837, 844, 855, ...), just the "minute" values (i.e. 0, 3, 15, ...). 

Additionally, in his table, gender is M/F. So I transformed "gender" and "female" from integers to character variables, which makes them identical to a M/F system. 

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model with sample time data, results = 'hide'}
mod2 <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(mod2)
```

```{r echo=FALSE, results= 'asis'}
class(mod2) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(mod2, title = "Base Model Summary Output (mod2)", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

## Base model findings

Both mod1 and mod2 have significant results. 

In mod1, intercept (aka peak), timebeforepeak, and timeafterpeak are significant, while gender has a p-value of 0.0835. In mod2, intercept (aka peak), sampletimebeforepeak, and sampletimeafterpeak are significant. Gender is even "less significant" with a p-value of 0.1245. 

```{r warning=FALSE, message=FALSE}
pander(anova(mod1, mod2))
```

However, it looks like mod2 has the better fit, so I will abandon mod1 and rename mod2 to 'base'.

```{r echo=FALSE, results = 'hide'}
class(mod1) <- "lmerModLmerTest"
class(mod2) <- "lmerModLmerTest"
```

```{r echo=FALSE}
rm(mod1)
base <- mod2
rm(mod2)
```

## Base model visualizations

```{r Figure 1: Averaging by sample peak time for mod2, echo=FALSE}
#The object "timeticks" clarifies where the tick marks in the x-axis should be.
timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)

cp_long$Sex <- cp_long$gender
cp_long$Sex <- as.factor(cp_long$Sex)
levels(cp_long$Sex) <- c('Male','Female')

ggplot(cp_long, aes(samplepeaknamenum, cortvalue, color=Sex, shape=Sex)) +
  stat_summary(fun.y=mean, geom="point", size=5) +
  scale_color_manual(values = c("Male" = "deepskyblue", "Female" = "palevioletred")) +
  stat_summary(fun.data=mean_se, geom="errorbar",
               linetype="solid", width=0.6) +
  stat_summary(aes(y=fitted(base)), fun.y=mean, geom="line", lwd=1.5, col="gray") +
scale_shape_manual(values=c(16, 17)) +
  labs(x="Sample Time Peak", y="Cortisol", color="Gender", shape="Gender") +
  theme_bw(base_size=18) +
  theme(legend.justification=c(0,1), legend.position=c(0,1),
        legend.background=
          element_rect(fill="white", color="black")) + scale_x_continuous(breaks=timeticks) + ggtitle("Base model by peak sample time")
```

```{r Figure 2: Barplot with error bars, echo=FALSE}
timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)
cp_long$Sex <- cp_long$gender
cp_long$Sex <- as.factor(cp_long$Sex)
levels(cp_long$Sex) <- c('Male','Female')
cp <- cp_long
cp$sampletime <- as.factor(cp$sampletime)
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
  return(data_sum)
}
cp1 <- data_summary(cp_long, varname="cortvalue", groupnames=c("gender", "sampletime", "Sex"))
cp1$sampletime <- as.factor(cp1$sampletime)
ggplot(cp1, aes(x=sampletime, y=cortvalue, fill=Sex)) + 
  geom_bar(stat="identity", color="black", 
           position=position_dodge()) +
  scale_fill_manual("legend", values = c("Male" = "deepskyblue", "Female" = "palevioletred")) +
  geom_errorbar(aes(ymin=cortvalue-sd, ymax=cortvalue+sd), width=.2,
                position=position_dodge(.9)) + ggtitle("Barplot by gender with error bars") + scale_x_discrete(name = "Time") + scale_y_continuous(name = "Uncentered cortisol values") + theme_set(theme_gray(base_size = 18))
```

```{r Object removal 1, include=FALSE}
rm(cp)
rm(cp1)
rm(timeticks)
rm(data_summary)
```

## Adding emotion to base model

Now, one emotion at a time, we will add an emotion to the base model as a random predictor. This will give us a total of five models. We will use the zero-centered version of the emotions (e.g. angerC).

### Anger

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model plus anger, results = 'hide'}
anger <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + angerC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(anger)
```

```{r echo=FALSE}
class(anger) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Anger", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(anger, title = "Anger Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Anger is not significant.

### Fear

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model plus fear, results = 'hide'}
fear <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + fearC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(fear)
```

```{r echo=FALSE}
class(fear) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Fear", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(fear, title = "Fear Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Fear is not significant.

### Happiness

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model plus happiness, results = 'hide'}
happy <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + happinessC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(happy)
```

```{r echo=FALSE}
class(happy) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Happiness", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(happy, title = "Happy Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Happiness is not significant.

### Sadness

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model plus sadness, results = 'hide'}
sad <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + sadnessC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(sad)
```

```{r echo=FALSE}
class(sad) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sadness", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(sad, title = "Sad Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Sadness is not significant.

### Pain

```{r include=FALSE}
cp_long$samplepeaknamenum <- as.integer(cp_long$samplepeaknamenum)
cp_long$sampletimetopeak <- as.integer(cp_long$sampletimetopeak)
cp_long$sampletimebeforepeak <- as.integer(cp_long$sampletimebeforepeak)
cp_long$sampletimeafterpeak <- as.integer(cp_long$sampletimeafterpeak)
cp_long$gender <- as.character(cp_long$gender)
cp_long$female <- as.character(cp_long$female)
```

```{r Base model plus pain, results = 'hide'}
pain <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + painC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(pain)
```

```{r echo=FALSE}
class(pain) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Pain", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(pain, title = "Pain Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Pain is not significant.

## Emotion model conclusions

From first glance, looks like none of the emotions have reached the alpha < 0.05 threshold. Now I will compared which models have better fit than the others.

```{r Model comparisons, include=FALSE, hide = 'results'}
class(base) <- "lmerMod"
class(anger) <- "lmerMod"
class(fear) <- "lmerMod"
class(happy) <- "lmerMod"
class(sad) <- "lmerMod"
class(pain) <- "lmerMod"
```

```{r warning=FALSE, message=FALSE}
pander(anova(base, anger, fear, happy, sad, pain))
```

Compared to the base model, the sad model significantly fits better, with the anger model bordering on significance.

```{r warning=FALSE, message=FALSE}
pander(anova(base, sad))
pander(anova(base, anger))
pander(anova(anger, fear, happy, sad, pain))
```

However, when you just compared sad to base, sad loses its significance. However, anger's p-value doesn't change. Additionally, when you compared all the emotions excluding base, sad remains significant.

```{r Model reclassifying, include=FALSE}
class(base) <- "lmerModLmerTest"
class(anger) <- "lmerModLmerTest"
class(fear) <- "lmerModLmerTest"
class(happy) <- "lmerModLmerTest"
class(sad) <- "lmerModLmerTest"
class(pain) <- "lmerModLmerTest"
```

```{r echo=FALSE, hide = 'results'}
#class(base) <- "lmerMod"
#class(anger) <- "lmerMod"
#class(fear) <- "lmerMod"
#class(happy) <- "lmerMod"
#class(sad) <- "lmerMod"
#class(pain) <- "lmerMod"

#all.labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Anger", "Fear", "Happiness", "Sadness", "Pain")

#colorder <- c("est", "df", "se", "p")

#tab_model(base, anger, fear, happy, sad, pain, title = "Model with all emotions", pred.labels = all.labels, dv.labels = c("Base", "Anger", "Fear", "Happiness", "Sadness", "Pain"), show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

```{r results = 'asis', echo=FALSE}
class(base) <- "lmerMod"
class(sad) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sadness")

colorder <- c("est", "df", "se", "p")

tab_model(base, sad, title = "Base model vs. sad model", pred.labels = labels, dv.labels = c("Base", "Sadness"), show.icc=FALSE, show.re.var=FALSE, string.p="P-value", show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

Even though sadnessC is not significant in the sad model, its presence somehow makes the model fit better compared to the base model and other emotion models. But by just comparing it to the base model, sad does not significantly improve model fit. 

## Sad model visualization

```{r Figure 3: Base model plus sadness, echo=FALSE}
timeticks <- c(0, 3, 15, 25, 30, 35, 40, 45, 60)

cp_long$Sex <- cp_long$gender
cp_long$Sex <- as.factor(cp_long$Sex)
levels(cp_long$Sex) <- c('Male','Female')

ggplot(cp_long, aes(samplepeaknamenum, cortvalue, color=Sex, shape=Sex)) +
  stat_summary(fun.y=mean, geom="point", size=5) +
  scale_color_manual(values = c("Male" = "deepskyblue", "Female" = "palevioletred")) +
  stat_summary(fun.data=mean_se, geom="errorbar", linetype="solid", width=0.6) +
  stat_summary(aes(y=fitted(sad)), fun.y=mean, geom="line", lwd=1.5, col="gray") +
  scale_shape_manual(values=c(16, 17)) + labs(x="Sample Time Peak", y="Cortisol", color="Gender", shape="Gender") + theme_bw(base_size=18) +
  theme(legend.justification=c(0,1), legend.position=c(0,1),
        legend.background=
          element_rect(fill="white", color="black")) + scale_x_continuous(breaks=timeticks) + ggtitle("Sad model by peak sample time")
```

## Adding CTQ to base model

Although nothing so far has definitively reached the alpha < 0.05 threshold, let's try adding ctq to see if it makes a difference. Here is the CTQ base model. 

```{r Base model plus CTQ, results = 'hide'}
ctq <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + ctqsumC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(ctq)
```

```{r echo=FALSE}
class(ctq) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "CTQ Total Sum", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak")

colorder <- c("est", "df", "se", "p")

tab_model(ctq, title = "Base Model Summary Output", pred.labels = labels, dv.labels = "Cortisol", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE,show.se=TRUE,string.se="Standard Error", show.df = TRUE, string.df="DF", p.val="kr", show.r2=TRUE, col.order=colorder)
```

```{r warning=FALSE, message=FALSE}
pander(anova(base, ctq))
```

Addding CTQ Total Sum to the base model does not make any difference. Let's now add CTQ to the sad model. 

In our dataset, we have CTQ Total Sum ("ctqsumC"). Let's see if adding CTQ to "sad" will make any difference. We will use the zero-centered version of CTQ Total Sum. 

```{r Base model plus sadness and CTQ, echo=FALSE, hide = 'results'}
sadctq <- lmer(cortvalue ~ (gender) + (sampletimebeforepeak) + (sampletimeafterpeak) + (gender*sampletimebeforepeak) + (gender*sampletimeafterpeak) + sadnessC + ctqsumC + (1|id) + (1|sampletime), data = cp_long, REML=TRUE)
summary(sadctq)
```

```{r echo=FALSE, hide = 'results'}
class(base) <- "lmerMod"
class(sad) <- "lmerMod"
class(sadctq) <- "lmerMod"

labels <- c("Intercept", "Gender", "TimeBeforePeak", "TimeAfterPeak", "Sex * TimeBeforePeak", "Sex * TimeAfterPeak", "Sadness", "CTQ Total Sum")

colorder <- c("est", "df", "se", "p")

tab_model(base, sad, sadctq, title = "Base vs. Sad vs. Sad-CTQ", pred.labels = labels, dv.labels = c("Base", "Sad", "Sad-CTQ"), p.val="kr", show.icc=FALSE, show.re.var=FALSE, string.p="P-value",show.ci=FALSE, show.se=TRUE, string.se="Standard Error", show.r2=TRUE, show.df = TRUE, string.df="DF", col.order=colorder)
```

```{r warning=FALSE, message=FALSE}
pander(anova(base, sad, ctq, sadctq))
```

CTQ is not a significant predictor of cortisol. However, when you compare the base, sad, ctq, and sadctq models, it appears that the ctq model has the best fit. Why? 

```{r Writing out the new cp_long dataset, include=FALSE}
#write.csv(cp_long, file="/Users/Julianna/Desktop/data/cp_long_aim2a.csv")
#write.csv(cp_long, file="C:/Users/jrcala/Documents/My Research/RStudio/cp_long_aim2a.csv")
```
